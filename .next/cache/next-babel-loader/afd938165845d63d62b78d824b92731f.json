{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport useSwr from 'swr';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport { getLayout } from 'components/MapLayout';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nconst TestingSites = ({\n  data\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, data.map((value, idx) => __jsx(\"p\", {\n  key: idx,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 32\n  }\n}, value.site_name ? `Name: ${value.site_name}${__jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 55\n  }\n})}` : '', \"Address: \", value.address, \" \", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 34\n  }\n}), \"You are \", value.appointment_required ? 'required' : 'not required', \" to have an appointment to get tested.\", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 113\n  }\n}), \"This testing site \", value.antibody_testing ? 'provides' : 'does not provide', \" antibody testing. \", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 104\n  }\n}), \"Additional Information: \", value.additional_info, \" \", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 57\n  }\n}), \"URL: \", value.provider_url) // additional_info: \"Urgent Care Clinic\"\n// address: \"633 Driggs Ave., Brooklyn, NY 11211\"\n// antibody_testing: true\n// appointment_required: false\n// coordinates: {lat: 40.7150681, lng: -73.9583843}\n// friday: \"8AM-8PM\"\n// monday: \"8AM-8PM\"\n// phone: \"(347) 987-4144\"\n// provider_url: \"http://www.umdcare.com\"\n// saturday: \"8AM-7PM\"\n// screening_required: true\n// site_name: \"UMD Urgent Care - Williamsburg\"\n// sunday: \"9AM-6PM\"\n// thursday: \"8AM-8PM\"\n// tuesday: \"8AM-8PM\"\n// wednesday: \"8AM-8PM\"\n));\n\nfunction CovidTestingSitesPage() {\n  const {\n    setState: setMapMarkers\n  } = React.useContext(MapMarkersContext);\n  const {\n    data,\n    error\n  } = useSwr('/api/testing-sites', fetcher);\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(() => {\n    const formattedData = (data || []).map(site => ({\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      name: site.site_name,\n      site_info: {\n        name: site.site_name,\n        provider_url: site.provider_url,\n        additional_info: site.additional_info,\n        address: site.address,\n        phone: site.phone,\n        monday: site.monday,\n        tuesday: site.tuesday,\n        wednesday: site.wednesday,\n        thursday: site.thursday,\n        friday: site.friday,\n        saturday: site.saturday,\n        sunday: site.sunday,\n        screening_required: site.screening_required,\n        appointment_required: site.appointment_required,\n        antibody_testing: site.antibody_testing\n      },\n      coordinates: {\n        lat: site.coordinates.lat,\n        lng: site.coordinates.lng\n      }\n    })); //console.log(\"formattedData\",formattedData);\n\n    setMapMarkers(formattedData);\n    return () => {\n      setMapMarkers([]);\n    };\n  }, [data, setMapMarkers]);\n  console.log(\"data\", data);\n  return __jsx(\"div\", {\n    className: \"sidebar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, error && 'Error loading content', !data && !error && 'Loading...', !error && data && __jsx(TestingSites, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 26\n    }\n  }));\n}\n\nCovidTestingSitesPage.getLayout = getLayout;\nexport default CovidTestingSitesPage;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx"],"names":["React","useEffect","useSwr","MapMarkersContext","getLayout","fetcher","args","fetch","then","res","json","TestingSites","data","map","value","idx","site_name","address","appointment_required","antibody_testing","additional_info","provider_url","CovidTestingSitesPage","setState","setMapMarkers","useContext","error","console","formattedData","site","key","coordinates","lat","lng","output_key","name","site_info","phone","monday","tuesday","wednesday","thursday","friday","saturday","sunday","screening_required","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport useSwr from 'swr';\r\n\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\nimport { getLayout } from 'components/MapLayout';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\r\n\r\nconst TestingSites = ({ data }) => (\r\n  <div>\r\n    {\r\n      data.map((value, idx) => <p key={idx}>\r\n        {value.site_name ? `Name: ${value.site_name}${<br></br>}` : ''}\r\n        Address: {value.address} <br></br>         \r\n        You are {value.appointment_required ? 'required' : 'not required'} to have an appointment to get tested.<br></br>\r\n        This testing site {value.antibody_testing ? 'provides' : 'does not provide'} antibody testing. <br></br>\r\n        Additional Information: {value.additional_info} <br></br> \r\n        URL: {value.provider_url}</p>\r\n        // additional_info: \"Urgent Care Clinic\"\r\n        // address: \"633 Driggs Ave., Brooklyn, NY 11211\"\r\n        // antibody_testing: true\r\n        // appointment_required: false\r\n        // coordinates: {lat: 40.7150681, lng: -73.9583843}\r\n        // friday: \"8AM-8PM\"\r\n        // monday: \"8AM-8PM\"\r\n        // phone: \"(347) 987-4144\"\r\n        // provider_url: \"http://www.umdcare.com\"\r\n        // saturday: \"8AM-7PM\"\r\n        // screening_required: true\r\n        // site_name: \"UMD Urgent Care - Williamsburg\"\r\n        // sunday: \"9AM-6PM\"\r\n        // thursday: \"8AM-8PM\"\r\n        // tuesday: \"8AM-8PM\"\r\n        // wednesday: \"8AM-8PM\"\r\n        )\r\n      \r\n    }\r\n  </div>\r\n);\r\n\r\nfunction CovidTestingSitesPage() {\r\n  const { setState: setMapMarkers } = React.useContext(MapMarkersContext);    \r\n  const { data, error } = useSwr('/api/testing-sites', fetcher);\r\n  if (error) {\r\n    console.error('Error loading data from API for /api/testing-sites: ', error);\r\n  }    \r\n\r\n  useEffect(() => {\r\n    const formattedData = (data || []).map((site) => ({\r\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      name: site.site_name,   \r\n      site_info: {\r\n        name: site.site_name, \r\n        provider_url: site.provider_url,\r\n        additional_info: site.additional_info,\r\n        address: site.address,\r\n        phone: site.phone,\r\n        monday: site.monday,\r\n        tuesday: site.tuesday,\r\n        wednesday: site.wednesday,\r\n        thursday: site.thursday,\r\n        friday: site.friday,\r\n        saturday: site.saturday,\r\n        sunday: site.sunday,\r\n        screening_required: site.screening_required,\r\n        appointment_required: site.appointment_required,\r\n        antibody_testing: site.antibody_testing, \r\n      },                   \r\n      coordinates: {\r\n        lat: site.coordinates.lat,\r\n        lng: site.coordinates.lng,\r\n      },\r\n    }));\r\n    //console.log(\"formattedData\",formattedData);\r\n    setMapMarkers(formattedData);\r\n\r\n    return () => {\r\n      setMapMarkers([]);\r\n    }\r\n  }, [data, setMapMarkers]);\r\n\r\n  console.log(\"data\",data)\r\n\r\n  return (\r\n    <div className=\"sidebar-content\">\r\n      {error && 'Error loading content'}\r\n      {!data && !error && 'Loading...'}\r\n      {/* {!error && data && \"yo yo\"} */}\r\n      {!error && data && <TestingSites data = {data}/>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nCovidTestingSitesPage.getLayout = getLayout;\r\n\r\nexport default CovidTestingSitesPage;\r\n"]},"metadata":{},"sourceType":"module"}