{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport useSwr from 'swr';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport { getLayout } from 'components/MapLayout';\n\nvar fetcher = function fetcher() {\n  return fetch.apply(void 0, arguments).then(function (res) {\n    return res.json();\n  });\n};\n\nfunction CovidTestingSitesPage() {\n  _s();\n\n  var _this = this;\n\n  var _React$useContext = React.useContext(MapMarkersContext),\n      setMapMarkers = _React$useContext.setState;\n\n  var _useSwr = useSwr('/api/testing-sites', fetcher),\n      data = _useSwr.data,\n      error = _useSwr.error;\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(function () {\n    var formattedData = (data || []).map(function (site) {\n      return {\n        key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        output_key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        name: site.site_name,\n        site_info: {\n          name: site.site_name,\n          provider_url: site.provider_url,\n          additional_info: site.additional_info,\n          address: site.address,\n          phone: site.phone,\n          monday: site.monday,\n          tuesday: site.tuesday,\n          wednesday: site.wednesday,\n          thursday: site.thursday,\n          friday: site.friday,\n          saturday: site.saturday,\n          sunday: site.sunday,\n          screening_required: site.screening_required,\n          appointment_required: site.appointment_required,\n          antibody_testing: site.antibody_testing\n        },\n        coordinates: {\n          lat: site.coordinates.lat,\n          lng: site.coordinates.lng\n        }\n      };\n    }); //console.log(\"formattedData\",formattedData);\n\n    setMapMarkers(formattedData);\n    return function () {\n      setMapMarkers([]);\n    };\n  }, [data, setMapMarkers]);\n  return __jsx(\"div\", {\n    className: \"sidebar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, error && 'Error loading content', !data && !error && 'Loading...', !error && data && data.map(function (item) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }\n    }, item);\n  }));\n}\n\n_s(CovidTestingSitesPage, \"4XOVNxxC375nAunT48kTk7Pt1E0=\", false, function () {\n  return [useSwr];\n});\n\n_c = CovidTestingSitesPage;\nCovidTestingSitesPage.getLayout = getLayout;\nexport default CovidTestingSitesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidTestingSitesPage\");","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx"],"names":["React","useEffect","useSwr","MapMarkersContext","getLayout","fetcher","fetch","then","res","json","CovidTestingSitesPage","useContext","setMapMarkers","setState","data","error","console","formattedData","map","site","key","site_name","coordinates","lat","lng","output_key","name","site_info","provider_url","additional_info","address","phone","monday","tuesday","wednesday","thursday","friday","saturday","sunday","screening_required","appointment_required","antibody_testing","item"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAaC,KAAK,MAAL,oBAAeC,IAAf,CAAoB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAAvB,CAAb;AAAA,CAAhB;;AAEA,SAASC,qBAAT,GAAiC;AAAA;;AAAA;;AAAA,0BACKV,KAAK,CAACW,UAAN,CAAiBR,iBAAjB,CADL;AAAA,MACbS,aADa,qBACvBC,QADuB;;AAAA,gBAEPX,MAAM,CAAC,oBAAD,EAAuBG,OAAvB,CAFC;AAAA,MAEvBS,IAFuB,WAEvBA,IAFuB;AAAA,MAEjBC,KAFiB,WAEjBA,KAFiB;;AAG/B,MAAIA,KAAJ,EAAW;AACTC,IAAAA,OAAO,CAACD,KAAR,CAAc,sDAAd,EAAsEA,KAAtE;AACD;;AAEDd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,aAAa,GAAG,CAACH,IAAI,IAAI,EAAT,EAAaI,GAAb,CAAiB,UAACC,IAAD;AAAA,aAAW;AAChDC,QAAAA,GAAG,YAAKD,IAAI,CAACE,SAAV,cAAuBF,IAAI,CAACG,WAAL,CAAiBC,GAAxC,cAA+CJ,IAAI,CAACG,WAAL,CAAiBE,GAAhE,CAD6C;AAEhDC,QAAAA,UAAU,YAAKN,IAAI,CAACE,SAAV,cAAuBF,IAAI,CAACG,WAAL,CAAiBC,GAAxC,cAA+CJ,IAAI,CAACG,WAAL,CAAiBE,GAAhE,CAFsC;AAGhDE,QAAAA,IAAI,EAAEP,IAAI,CAACE,SAHqC;AAIhDM,QAAAA,SAAS,EAAE;AACTD,UAAAA,IAAI,EAAEP,IAAI,CAACE,SADF;AAETO,UAAAA,YAAY,EAAET,IAAI,CAACS,YAFV;AAGTC,UAAAA,eAAe,EAAEV,IAAI,CAACU,eAHb;AAITC,UAAAA,OAAO,EAAEX,IAAI,CAACW,OAJL;AAKTC,UAAAA,KAAK,EAAEZ,IAAI,CAACY,KALH;AAMTC,UAAAA,MAAM,EAAEb,IAAI,CAACa,MANJ;AAOTC,UAAAA,OAAO,EAAEd,IAAI,CAACc,OAPL;AAQTC,UAAAA,SAAS,EAAEf,IAAI,CAACe,SARP;AASTC,UAAAA,QAAQ,EAAEhB,IAAI,CAACgB,QATN;AAUTC,UAAAA,MAAM,EAAEjB,IAAI,CAACiB,MAVJ;AAWTC,UAAAA,QAAQ,EAAElB,IAAI,CAACkB,QAXN;AAYTC,UAAAA,MAAM,EAAEnB,IAAI,CAACmB,MAZJ;AAaTC,UAAAA,kBAAkB,EAAEpB,IAAI,CAACoB,kBAbhB;AAcTC,UAAAA,oBAAoB,EAAErB,IAAI,CAACqB,oBAdlB;AAeTC,UAAAA,gBAAgB,EAAEtB,IAAI,CAACsB;AAfd,SAJqC;AAqBhDnB,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAEJ,IAAI,CAACG,WAAL,CAAiBC,GADX;AAEXC,UAAAA,GAAG,EAAEL,IAAI,CAACG,WAAL,CAAiBE;AAFX;AArBmC,OAAX;AAAA,KAAjB,CAAtB,CADc,CA2Bd;;AACAZ,IAAAA,aAAa,CAACK,aAAD,CAAb;AAEA,WAAO,YAAM;AACXL,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAFD;AAGD,GAjCQ,EAiCN,CAACE,IAAD,EAAOF,aAAP,CAjCM,CAAT;AAqCA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,IAAI,uBADZ,EAEG,CAACD,IAAD,IAAS,CAACC,KAAV,IAAmB,YAFtB,EAGG,CAACA,KAAD,IAAUD,IAAV,IAAkBA,IAAI,CAACI,GAAL,CAAS,UAAAwB,IAAI;AAAA,WAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CAAJ;AAAA,GAAb,CAHrB,CADF;AAOD;;GAnDQhC,qB;UAEiBR,M;;;KAFjBQ,qB;AAqDTA,qBAAqB,CAACN,SAAtB,GAAkCA,SAAlC;AAEA,eAAeM,qBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport useSwr from 'swr';\r\n\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\nimport { getLayout } from 'components/MapLayout';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(res => res.json())\r\n\r\nfunction CovidTestingSitesPage() {\r\n  const { setState: setMapMarkers } = React.useContext(MapMarkersContext);    \r\n  const { data, error } = useSwr('/api/testing-sites', fetcher);\r\n  if (error) {\r\n    console.error('Error loading data from API for /api/testing-sites: ', error);\r\n  }    \r\n\r\n  useEffect(() => {\r\n    const formattedData = (data || []).map((site) => ({\r\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      name: site.site_name,   \r\n      site_info: {\r\n        name: site.site_name, \r\n        provider_url: site.provider_url,\r\n        additional_info: site.additional_info,\r\n        address: site.address,\r\n        phone: site.phone,\r\n        monday: site.monday,\r\n        tuesday: site.tuesday,\r\n        wednesday: site.wednesday,\r\n        thursday: site.thursday,\r\n        friday: site.friday,\r\n        saturday: site.saturday,\r\n        sunday: site.sunday,\r\n        screening_required: site.screening_required,\r\n        appointment_required: site.appointment_required,\r\n        antibody_testing: site.antibody_testing, \r\n      },                   \r\n      coordinates: {\r\n        lat: site.coordinates.lat,\r\n        lng: site.coordinates.lng,\r\n      },\r\n    }));\r\n    //console.log(\"formattedData\",formattedData);\r\n    setMapMarkers(formattedData);\r\n\r\n    return () => {\r\n      setMapMarkers([]);\r\n    }\r\n  }, [data, setMapMarkers]);\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"sidebar-content\">\r\n      {error && 'Error loading content'}\r\n      {!data && !error && 'Loading...'}\r\n      {!error && data && data.map(item => <p>{item}</p>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nCovidTestingSitesPage.getLayout = getLayout;\r\n\r\nexport default CovidTestingSitesPage;\r\n"]},"metadata":{},"sourceType":"module"}