{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/components/GoogleMap/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport useSwr from 'swr';\nimport { MapMarker } from 'components/MapMarker';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport config from './mapConfig';\n\nvar fetcher = function fetcher() {\n  return fetch.apply(void 0, arguments).then(function (res) {\n    return res.json();\n  });\n};\n\nfunction getMapOptions() {\n  return config;\n}\n\nexport function GoogleMap() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(MapMarkersContext),\n      markers = _useContext.markers;\n\n  var _useState = useState(\"\"),\n      newAddress = _useState[0],\n      setNewAddress = _useState[1];\n\n  var _useState2 = useState({\n    lat: 40.635,\n    lng: -73.94\n  }),\n      center = _useState2[0],\n      setCenter = _useState2[1];\n\n  var _useState3 = useState(13),\n      zoom = _useState3[0],\n      setZoom = _useState3[1];\n\n  useEffect(function () {\n    if (newAddress !== \"\") {\n      fetch(\"https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=\".concat(newAddress), {\n        method: \"GET\",\n        dataType: \"JSON\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setCenter({\n          lat: data.results[0].geometry.location.lat,\n          lng: data.results[0].geometry.location.lng\n        });\n        setZoom(14);\n      });\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"google-map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    id: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setNewAddress(document.getElementById('address').value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }, \"Change Center\"), __jsx(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: \"AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo\"\n    } //bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL }}\n    ,\n    center: center // defaultZoom={13}\n    ,\n    zoom: zoom,\n    options: getMapOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, markers.map(function (item) {\n    return __jsx(MapMarker, {\n      key: item.key //text={item.name}            \n      ,\n      lat: item.coordinates.lat,\n      lng: item.coordinates.lng,\n      output_key: item.output_key,\n      name: item.name // coordinates = {item.coordinates}      \n      ,\n      site_info: item.site_info,\n      onClick: setCenter({\n        lat: item.coordinates.lat,\n        lng: item.coordinates.lng\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\n_s(GoogleMap, \"ReI72aYXGG9r+QY/nDUQaBjojag=\");\n\n_c = GoogleMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/components/GoogleMap/index.jsx"],"names":["React","useContext","useState","useEffect","GoogleMapReact","useSwr","MapMarker","MapMarkersContext","config","fetcher","fetch","then","res","json","getMapOptions","GoogleMap","markers","newAddress","setNewAddress","lat","lng","center","setCenter","zoom","setZoom","method","dataType","response","data","results","geometry","location","document","getElementById","value","key","map","item","coordinates","output_key","name","site_info"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport useSwr from 'swr';\r\n\r\nimport { MapMarker } from 'components/MapMarker';\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\n\r\nimport config from './mapConfig';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\r\n\r\nfunction getMapOptions() {\r\n  return config;\r\n}\r\n\r\nexport function GoogleMap() {  \r\n  const { markers } = useContext(MapMarkersContext);    \r\n  const [newAddress, setNewAddress] = useState(\"\");\r\n  const [center, setCenter] = useState({lat: 40.635,lng: -73.94});\r\n  const [zoom, setZoom] = useState(13);\r\n\r\n  useEffect(() => {        \r\n    if(newAddress !== \"\"){\r\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${newAddress}`,{\r\n          method: \"GET\",\r\n          dataType: \"JSON\",\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {           \r\n        setCenter({lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}); \r\n        setZoom(14);\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return (\r\n    <div className=\"google-map-container\">            \r\n      {<input id=\"address\"></input>}\r\n      {<button onClick={() => setNewAddress(document.getElementById('address').value)}>Change Center</button>}      \r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo\" }}\r\n        //bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL }}\r\n        center={center}\r\n        // defaultZoom={13}\r\n        zoom={zoom}\r\n        options={getMapOptions}\r\n      >\r\n       {markers.map((item) => (\r\n          <MapMarker\r\n            key={item.key}\r\n            //text={item.name}            \r\n            lat={ item.coordinates.lat}\r\n            lng={ item.coordinates.lng}\r\n            output_key = {item.output_key}            \r\n            name = {item.name}\r\n            // coordinates = {item.coordinates}      \r\n            site_info= {item.site_info}     \r\n            onClick = {setCenter({lat: item.coordinates.lat,lng: item.coordinates.lng})}        \r\n          />\r\n        ))}\r\n      </GoogleMapReact>      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}