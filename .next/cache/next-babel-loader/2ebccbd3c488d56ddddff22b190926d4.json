{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport useSwr from 'swr';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { MapMarkersContext } from 'components/MapMarkersContext'; //add another context that allows tracking what is in the info panel. It could possibly be a specific page in the pages folder\n//url for each specific info box. so once you click on a specific info box it could take you to a page where the data is loaded. so you could copy url and send somebody a testing site\n//more specific for each route: covid-testing-sites/\"identifier\" â€“ Dynamic Routing using [] around the name of the file [site].jsx directly mapped to request.params. Max to send me next.js docs\n//still make a context, but handle more from the page so it will be easier\n//we would link to the page so you wouldn't have a click handler, but the page itself will have a specific one it's looking at request?params=\"identifier\"\n\nimport { getLayout } from 'components/MapLayout';\n\nvar fetcher = function fetcher() {\n  return fetch.apply(void 0, arguments).then(function (res) {\n    return res.json();\n  });\n}; //this is the data for the side of the map. however, it should only show up on click.\n//will have to figure out how to do context to pass onClick so that it will show up\n\n\nvar TestingSites = function TestingSites(_ref) {\n  var data = _ref.data;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, data\n  /*.filter(item=>item.site_name===\"AdvantageCare Kings Highway\") // filtering the data here. but we want it to filter to just the item that's clicked.*/\n  .map(function (site) {\n    return __jsx(\"p\", {\n      key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"Address: \", site.address, \" \", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }\n    }), site.phone ? \"Phone Number: \".concat(site.phone) : '', site.phone ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 74\n      }\n    }) : '', \"You are \", site.appointment_required ? 'required' : 'not required', \" to have an appointment to get tested.\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 116\n      }\n    }), \"This testing site \", site.antibody_testing ? 'provides' : 'does not provide', \" antibody testing. \", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 105\n      }\n    }), \"Hours: \", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }\n    }), site.sunday ? \"Sunday: \".concat(site.sunday) : '', site.sunday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 71\n      }\n    }) : '', site.monday ? \"Monday: \".concat(site.monday) : '', site.monday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 73\n      }\n    }) : '', site.tuesday ? \"Tuesday: \".concat(site.tuesday) : '', site.tuesday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 77\n      }\n    }) : '', site.wednesday ? \"Wednesday: \".concat(site.wednesday) : '', site.wednesday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 85\n      }\n    }) : '', site.thursday ? \"Thursday: \".concat(site.thursday) : '', site.thursday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 81\n      }\n    }) : '', site.friday ? \"Friday: \".concat(site.friday) : '', site.friday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 73\n      }\n    }) : '', site.saturday ? \"Saturday: \".concat(site.saturday) : '', site.saturday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 81\n      }\n    }) : '', site.additional_info ? \"Additional Information: \".concat(site.additional_info) : '', site.additional_info ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 116\n      }\n    }) : '', site.provider_url ? \"URL: \" : '', site.provider_url ? __jsx(\"a\", {\n      href: site.provider_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 68\n      }\n    }, site.provider_url) : '', site.provider_url ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 148\n      }\n    }) : '', __jsx(Link, {\n      href: \"/covid-testing-sites/[site]\",\n      as: \"/covid-testing-sites/\".concat(site.coordinates.lat, \",\").concat(site.coordinates.lng),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Link to this Info\")));\n  }));\n};\n\n_c = TestingSites;\n\nfunction CovidTestingSitesPage() {\n  _s();\n\n  var _React$useContext = React.useContext(MapMarkersContext),\n      setMapMarkers = _React$useContext.setState;\n\n  var _useSwr = useSwr('/api/testing-sites', fetcher),\n      data = _useSwr.data,\n      error = _useSwr.error;\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(function () {\n    var formattedData = (data || []).map(function (site) {\n      return {\n        key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        output_key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        name: site.site_name,\n        site_info: {\n          name: site.site_name,\n          provider_url: site.provider_url,\n          additional_info: site.additional_info,\n          address: site.address,\n          phone: site.phone,\n          monday: site.monday,\n          tuesday: site.tuesday,\n          wednesday: site.wednesday,\n          thursday: site.thursday,\n          friday: site.friday,\n          saturday: site.saturday,\n          sunday: site.sunday,\n          screening_required: site.screening_required,\n          appointment_required: site.appointment_required,\n          antibody_testing: site.antibody_testing\n        },\n        coordinates: {\n          lat: site.coordinates.lat,\n          lng: site.coordinates.lng\n        }\n      };\n    }); //console.log(\"formattedData\",formattedData);\n\n    setMapMarkers(formattedData);\n    return function () {\n      setMapMarkers([]);\n    };\n  }, [data, setMapMarkers]);\n  return __jsx(\"div\", {\n    className: \"sidebar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, error && 'Error loading content', !data && !error && 'Loading...', !error && data && __jsx(TestingSites, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 26\n    }\n  }));\n}\n\n_s(CovidTestingSitesPage, \"4XOVNxxC375nAunT48kTk7Pt1E0=\", false, function () {\n  return [useSwr];\n});\n\n_c2 = CovidTestingSitesPage;\nCovidTestingSitesPage.getLayout = getLayout;\nexport default CovidTestingSitesPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TestingSites\");\n$RefreshReg$(_c2, \"CovidTestingSitesPage\");","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx"],"names":["React","useEffect","useSwr","useRouter","Link","MapMarkersContext","getLayout","fetcher","fetch","then","res","json","TestingSites","data","map","site","site_name","coordinates","lat","lng","address","phone","appointment_required","antibody_testing","sunday","monday","tuesday","wednesday","thursday","friday","saturday","additional_info","provider_url","CovidTestingSitesPage","useContext","setMapMarkers","setState","error","console","formattedData","key","output_key","name","site_info","screening_required"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport useSwr from 'swr';\r\n\r\nimport { useRouter } from 'next/router'\r\nimport Link from 'next/link'\r\n\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\n\r\n\r\n//add another context that allows tracking what is in the info panel. It could possibly be a specific page in the pages folder\r\n//url for each specific info box. so once you click on a specific info box it could take you to a page where the data is loaded. so you could copy url and send somebody a testing site\r\n//more specific for each route: covid-testing-sites/\"identifier\" â€“ Dynamic Routing using [] around the name of the file [site].jsx directly mapped to request.params. Max to send me next.js docs\r\n//still make a context, but handle more from the page so it will be easier\r\n//we would link to the page so you wouldn't have a click handler, but the page itself will have a specific one it's looking at request?params=\"identifier\"\r\n\r\nimport { getLayout } from 'components/MapLayout';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\r\n\r\n//this is the data for the side of the map. however, it should only show up on click.\r\n//will have to figure out how to do context to pass onClick so that it will show up\r\nconst TestingSites = ({ data }) => (\r\n  <div>\r\n    {\r\n      data/*.filter(item=>item.site_name===\"AdvantageCare Kings Highway\") // filtering the data here. but we want it to filter to just the item that's clicked.*/\r\n        .map((site) => (\r\n          <p key={`${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`}>\r\n\r\n            Address: {site.address} <br></br>\r\n          {site.phone ? `Phone Number: ${site.phone}` : ''}{site.phone ? <br></br> : ''}\r\n            You are {site.appointment_required ? 'required' : 'not required'} to have an appointment to get tested.<br></br>\r\n          This testing site {site.antibody_testing ? 'provides' : 'does not provide'} antibody testing. <br></br>\r\n            Hours: <br></br>\r\n          {site.sunday ? `Sunday: ${site.sunday}` : ''}{site.sunday ? <br></br> : ''}\r\n            {site.monday ? `Monday: ${site.monday}` : ''}{site.monday ? <br></br> : ''}\r\n            {site.tuesday ? `Tuesday: ${site.tuesday}` : ''}{site.tuesday ? <br></br> : ''}\r\n            {site.wednesday ? `Wednesday: ${site.wednesday}` : ''}{site.wednesday ? <br></br> : ''}\r\n            {site.thursday ? `Thursday: ${site.thursday}` : ''}{site.thursday ? <br></br> : ''}\r\n            {site.friday ? `Friday: ${site.friday}` : ''}{site.friday ? <br></br> : ''}\r\n            {site.saturday ? `Saturday: ${site.saturday}` : ''}{site.saturday ? <br></br> : ''}\r\n            {site.additional_info ? `Additional Information: ${site.additional_info}` : ''}{site.additional_info ? <br></br> : ''}\r\n            {site.provider_url ? `URL: ` : ''}{site.provider_url ? <a href = {site.provider_url}>{site.provider_url}</a> : ''}{site.provider_url ? <br></br> : ''}\r\n            <Link href=\"/covid-testing-sites/[site]\" as={`/covid-testing-sites/${site.coordinates.lat},${site.coordinates.lng}`}>\r\n                <a>Link to this Info</a>\r\n            </Link>\r\n          </p>\r\n        ))\r\n    }\r\n  </div>\r\n);\r\n\r\nfunction CovidTestingSitesPage() {\r\n  const { setState: setMapMarkers } = React.useContext(MapMarkersContext);\r\n  const { data, error } = useSwr('/api/testing-sites', fetcher);\r\n  if (error) {\r\n    console.error('Error loading data from API for /api/testing-sites: ', error);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const formattedData = (data || []).map((site) => ({\r\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      name: site.site_name,\r\n      site_info: {\r\n        name: site.site_name,\r\n        provider_url: site.provider_url,\r\n        additional_info: site.additional_info,\r\n        address: site.address,\r\n        phone: site.phone,\r\n        monday: site.monday,\r\n        tuesday: site.tuesday,\r\n        wednesday: site.wednesday,\r\n        thursday: site.thursday,\r\n        friday: site.friday,\r\n        saturday: site.saturday,\r\n        sunday: site.sunday,\r\n        screening_required: site.screening_required,\r\n        appointment_required: site.appointment_required,\r\n        antibody_testing: site.antibody_testing,\r\n      },\r\n      coordinates: {\r\n        lat: site.coordinates.lat,\r\n        lng: site.coordinates.lng,\r\n      },\r\n    }));\r\n    //console.log(\"formattedData\",formattedData);\r\n    setMapMarkers(formattedData);\r\n\r\n    return () => {\r\n      setMapMarkers([]);\r\n    }\r\n  }, [data, setMapMarkers]);\r\n\r\n  return (\r\n    <div className=\"sidebar-content\">\r\n      {error && 'Error loading content'}\r\n      {!data && !error && 'Loading...'}\r\n      {/* {!error && data && \"data here\"} */}\r\n      {!error && data && <TestingSites data = {data}/>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nCovidTestingSitesPage.getLayout = getLayout;\r\n\r\nexport default CovidTestingSitesPage;\r\n"]},"metadata":{},"sourceType":"module"}