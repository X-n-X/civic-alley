{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/[testing-site].jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport useSwr from 'swr';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    pid,\n    name\n  } = router.query;\n  const {\n    data,\n    error\n  } = useSwr('/api/testing-sites', fetcher);\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }, \"Address: \", address);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/[testing-site].jsx"],"names":["React","useEffect","useRouter","MapMarkersContext","useSwr","fetcher","args","fetch","then","res","json","Post","router","pid","name","query","data","error","address"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3B,CAA7B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBF,MAAM,CAACG,KAA7B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBb,MAAM,CAAC,oBAAD,EAAuBC,OAAvB,CAA9B;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaa,OAAb,CAAP;AACD,CAND;;AAQA,eAAeP,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useRouter } from 'next/router'\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport useSwr from 'swr';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nconst Post = () => {\n  const router = useRouter()\n  const { pid, name } = router.query\n  const { data, error } = useSwr('/api/testing-sites', fetcher);\n\n  return <p>Address: {address}</p>\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}