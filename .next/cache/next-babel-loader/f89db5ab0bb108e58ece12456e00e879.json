{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/components/MapMarker/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { ClickedItemContext } from 'components/ClickedItemContext';\n\nfunction titleCase(string) {\n  const y = string.split(\"_\");\n  y.forEach(function (value, i, array) {\n    array[i] = array[i][0].toUpperCase() + array[i].slice(1);\n  });\n  return y.join(\" \");\n}\n\nexport const MapMarker = ({\n  output_key,\n  key,\n  name,\n  coordinates,\n  site_info,\n  function_to_run\n}) => {\n  const {\n    0: isInfoOpen,\n    1: setIsInfoOpen\n  } = useState(false);\n  const {\n    0: currentInfoOpen,\n    1: setInfoOpen\n  } = useState(\"\"); // const toggleInfo = useCallback((e) => {\n  //   setIsInfoOpen((wasOpen) => !wasOpen);    \n  //   setInfoOpen(output_key);      \n  // }, [setIsInfoOpen]);\n\n  return __jsx(\"div\", {\n    className: \"map-marker-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: function_to_run,\n    className: \"map-marker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    //className={`map-marker-info${currentInfoOpen === output_key.key && isInfoOpen ? ' map-marker-info--active' : ''}`}\n    className: `map-marker-info${isInfoOpen ? ' map-marker-info--active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, coordinates, name ? `${titleCase(name)}` : '', __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 50\n    }\n  }), site_info.address));\n};","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/components/MapMarker/index.jsx"],"names":["React","useState","useCallback","ClickedItemContext","titleCase","string","y","split","forEach","value","i","array","toUpperCase","slice","join","MapMarker","output_key","key","name","coordinates","site_info","function_to_run","isInfoOpen","setIsInfoOpen","currentInfoOpen","setInfoOpen","address"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,kBAAT,QAAmC,+BAAnC;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA0B;AACxB,QAAMC,CAAC,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,CAAV;AACAD,EAAAA,CAAC,CAACE,OAAF,CAAU,UAASC,KAAT,EAAgBC,CAAhB,EAAmBC,KAAnB,EAAyB;AACjCA,IAAAA,KAAK,CAACD,CAAD,CAAL,GAAWC,KAAK,CAACD,CAAD,CAAL,CAAS,CAAT,EAAYE,WAAZ,KAA4BD,KAAK,CAACD,CAAD,CAAL,CAASG,KAAT,CAAe,CAAf,CAAvC;AACD,GAFD;AAGA,SAAQP,CAAC,CAACQ,IAAF,CAAO,GAAP,CAAR;AACD;;AAED,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,GAAd;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,WAAzB;AAAsCC,EAAAA,SAAtC;AAAiDC,EAAAA;AAAjD,CAAD,KAAwE;AAC/F,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BtB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACuB,eAAD;AAAA,OAAkBC;AAAlB,MAAiCxB,QAAQ,CAAC,EAAD,CAA/C,CAF+F,CAI/F;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,OAAO,EAAEoB,eAAjB;AAAkC,IAAA,SAAS,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME;AACE;AACA,IAAA,SAAS,EAAG,kBAAkBC,UAAU,GAAG,0BAAH,GAAgC,EAAG,EAF7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAICH,WAJD,EAKCD,IAAI,GAAI,GAAEd,SAAS,CAACc,IAAD,CAAO,EAAtB,GAA0B,EAL/B,EAKkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALlC,EAK2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL3C,EAMCE,SAAS,CAACM,OANX,CANF,CADF;AAsBD,CA/BM","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { ClickedItemContext } from 'components/ClickedItemContext';\n\nfunction titleCase(string){\n  const y = string.split(\"_\");\n  y.forEach(function(value, i, array){\n    array[i] = array[i][0].toUpperCase() + array[i].slice(1);\n  });\n  return (y.join(\" \"));\n}\n\nexport const MapMarker = ({ output_key, key, name, coordinates, site_info, function_to_run }) => {\n  const [isInfoOpen, setIsInfoOpen] = useState(false);  \n  const [currentInfoOpen, setInfoOpen] = useState(\"\");  \n\n  // const toggleInfo = useCallback((e) => {\n  //   setIsInfoOpen((wasOpen) => !wasOpen);    \n  //   setInfoOpen(output_key);      \n  // }, [setIsInfoOpen]);\n\n  return (\n    <div className=\"map-marker-container\">\n      \n      <button onClick={function_to_run} className=\"map-marker\">\n        {/* {text} */}\n        {/* <img onClick={toggleInfo} src=\"https://www.fultoncountyga.gov/-/media/Images/ICONS/COVID/coronavirus-testing-icon-01.ashx?h=300&w=300&la=en&hash=167F5E81A664D85DC93C64981F374240\" className=\"map-marker\" ></img> */}        \n      </button>\n      <div\n        //className={`map-marker-info${currentInfoOpen === output_key.key && isInfoOpen ? ' map-marker-info--active' : ''}`}\n        className={`map-marker-info${ isInfoOpen ? ' map-marker-info--active' : ''}`}\n      >\n      {coordinates}           \n      {name ? `${titleCase(name)}` : ''}<br></br><br></br>\n      {site_info.address}\n      {/* {Object.keys(site_info).map(key => (\n        <p>\n          {site_info[key] ? `${titleCase(key)}: ${site_info[key]}` : ''}\n        </p>\n      ))} */}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}