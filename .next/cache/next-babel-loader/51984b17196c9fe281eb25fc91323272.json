{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/components/RepresentativeSearch/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nconst RepresentativesByName = ({\n  json_input\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }\n}, json_input.officials.map((value, idx) => __jsx(\"li\", {\n  key: idx,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 47\n  }\n}, value.name)));\n\nconst Coordinates = ({\n  coordinates\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, \"lat: \" + coordinates.lat + \"\\nlng: \" + coordinates.lng //coordinates.map((value,idx) => <li key={idx}>{value}</li>)       \n);\n\nclass RepresentativeSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n      coordinates: {\n        lat: \"\",\n        lng: \"\"\n      },\n      reports: {\n        offices: [\"\"],\n        officials: [\"\"]\n      }\n    };\n    this.setAddress = this.setAddress.bind(this);\n    this.setCoordinates = this.setCoordinates.bind(this);\n    this.findRepresentatives = this.findRepresentatives.bind(this); // this.state = { isEmptyState: true, isAddTripState: false  }\n    // this.triggerAddTripState = this.triggerAddTripState.bind(this);\n  }\n\n  setAddress(e) {\n    e.preventDefault(); //if(Number(event.target.value) != NaN)\n\n    this.setState({\n      address: e.target.value\n    });\n  }\n\n  findRepresentatives(e) {\n    e.preventDefault();\n\n    if (this.state.address !== \"\") {\n      //fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\n      fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`, {\n        // https://www.googleapis.com/civicinfo/v2/voterinfo?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`\n        method: \"GET\",\n        dataType: \"JSON\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      }).then(response => response.json()).then(data => {\n        // console.log(data);          \n        //console.log(\"coordinates\",this.state.coordinates)\n        this.setState({\n          reports: data\n        });\n        this.setCoordinates();\n      });\n    }\n  }\n\n  setCoordinates() {\n    if (this.state.address !== \"\") {\n      //fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\n      fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`, {\n        method: \"GET\",\n        dataType: \"JSON\" // headers: {\n        //   \"Content-Type\": \"application/json; charset=utf-8\",\n        // }\n\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          coordinates: {\n            lat: data.results[0].geometry.location.lat,\n            lng: data.results[0].geometry.location.lng\n          }\n        });\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, \"Enter your Address: \", this.state.answer), __jsx(\"input\", {\n      value: this.state.address,\n      onChange: this.setAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }), __jsx(\"button\", {\n      onClick: this.findRepresentatives,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, \"Find\"), __jsx(RepresentativesByName, {\n      json_input: this.state.reports,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }), __jsx(Coordinates, {\n      coordinates: this.state.coordinates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default RepresentativeSearch;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/components/RepresentativeSearch/index.jsx"],"names":["React","Component","RepresentativesByName","json_input","officials","map","value","idx","name","Coordinates","coordinates","lat","lng","RepresentativeSearch","constructor","props","state","address","reports","offices","setAddress","bind","setCoordinates","findRepresentatives","e","preventDefault","setState","target","fetch","method","dataType","headers","then","response","json","data","results","geometry","location","render","answer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst RepresentativesByName = ({ json_input}) => (\n  <div>\n    {\n      json_input.officials.map((value,idx) => <li key={idx}>{value.name}</li>)       \n    }   \n  </div>\n);\n\nconst Coordinates = ({coordinates}) => (\n  <div>\n    {\n      \"lat: \"+coordinates.lat+\"\\nlng: \"+coordinates.lng\n      //coordinates.map((value,idx) => <li key={idx}>{value}</li>)       \n    }   \n  </div>\n);\n\nclass RepresentativeSearch extends Component {\n  constructor(props){\n      super(props); \n      this.state = {\n        address: \"\",\n        coordinates: {lat:\"\",lng:\"\"},\n        reports: {offices:[\"\"],officials:[\"\"]},\n      };        \n\n      this.setAddress = this.setAddress.bind(this);\n      this.setCoordinates = this.setCoordinates.bind(this);\n      this.findRepresentatives = this.findRepresentatives.bind(this);\n      // this.state = { isEmptyState: true, isAddTripState: false  }\n      // this.triggerAddTripState = this.triggerAddTripState.bind(this);\n  }\n\n  setAddress(e){\n    e.preventDefault();\n    //if(Number(event.target.value) != NaN)\n        this.setState({address: e.target.value})\n  }\n\n  findRepresentatives(e){\n    e.preventDefault();\n    if(this.state.address !== \"\"){ \n      \n        //fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\n        fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`,{\n          // https://www.googleapis.com/civicinfo/v2/voterinfo?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`\n            method: \"GET\",\n            dataType: \"JSON\",\n            headers: {\n              \"Content-Type\": \"application/json; charset=utf-8\",\n            }\n        })\n        .then(response => response.json())\n        .then(data => { \n          // console.log(data);          \n          //console.log(\"coordinates\",this.state.coordinates)\n          this.setState({ reports: data})\n          this.setCoordinates();\n        });\n    }\n  }\n  \n\n  setCoordinates(){    \n    if(this.state.address !== \"\"){             \n        //fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\n        fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`,{\n            method: \"GET\",\n            dataType: \"JSON\",\n            // headers: {\n            //   \"Content-Type\": \"application/json; charset=utf-8\",\n            // }\n        })\n        .then(response => response.json())\n        .then(data => {           \n          this.setState({ coordinates: {lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}});          \n        });\n    }\n  }\n\nrender() {\n\n  return (\n    \n    <div>\n      <h1>Enter your Address: {this.state.answer}</h1>\n      <input value={this.state.address} onChange={this.setAddress}></input>\n      <button onClick={this.findRepresentatives}>Find</button>\n      <RepresentativesByName json_input = {this.state.reports}/>\n      <Coordinates coordinates = {this.state.coordinates}/>      \n      \n    </div>\n\n  );\n}\n}\n\nexport default RepresentativeSearch;"]},"metadata":{},"sourceType":"module"}