{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport useSwr from 'swr';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { MapMarkersContext } from 'components/MapMarkersContext'; //add another context that allows tracking what is in the info panel. It could possibly be a specific page in the pages folder\n//url for each specific info box. so once you click on a specific info box it could take you to a page where the data is loaded. so you could copy url and send somebody a testing site\n//more specific for each route: covid-testing-sites/\"identifier\" â€“ Dynamic Routing using [] around the name of the file [site].jsx directly mapped to request.params. Max to send me next.js docs\n//still make a context, but handle more from the page so it will be easier \n//we would link to the page so you wouldn't have a click handler, but the page itself will have a specific one it's looking at request?params=\"identifier\"\n\nimport { getLayout } from 'components/MapLayout';\n\nvar fetcher = function fetcher() {\n  return fetch.apply(void 0, arguments).then(function (res) {\n    return res.json();\n  });\n}; //this is the data for the side of the map. however, it should only show up on click.\n//will have to figure out how to do context to pass onClick so that it will show up\n\n\nvar TestingSites = function TestingSites(_ref) {\n  var data = _ref.data;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, data.filter(function (item) {\n    return item.site_name === \"AdvantageCare Kings Highway\";\n  }) //filtering the data here. but we want it to filter to just the item that's clicked.\n  .map(function (value, idx) {\n    return __jsx(\"p\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }\n    }, \"Address: \", value.address, \" \", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 34\n      }\n    }), value.phone ? \"Phone Number: \".concat(value.phone) : '', value.phone ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 75\n      }\n    }) : '', \"You are \", value.appointment_required ? 'required' : 'not required', \" to have an appointment to get tested.\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 113\n      }\n    }), \"This testing site \", value.antibody_testing ? 'provides' : 'does not provide', \" antibody testing. \", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 104\n      }\n    }), \"Hours: \", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }), value.sunday ? \"Sunday: \".concat(value.sunday) : '', value.sunday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 72\n      }\n    }) : '', value.monday ? \"Monday: \".concat(value.monday) : '', value.monday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 72\n      }\n    }) : '', value.tuesday ? \"Tuesday: \".concat(value.tuesday) : '', value.tuesday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 76\n      }\n    }) : '', value.wednesday ? \"Wednesday: \".concat(value.wednesday) : '', value.wednesday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 84\n      }\n    }) : '', value.thursday ? \"Thursday: \".concat(value.thursday) : '', value.thursday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 80\n      }\n    }) : '', value.friday ? \"Friday: \".concat(value.friday) : '', value.friday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 72\n      }\n    }) : '', value.saturday ? \"Saturday: \".concat(value.saturday) : '', value.saturday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 80\n      }\n    }) : '', value.additional_info ? \"Additional Information: \".concat(value.additional_info) : '', value.additional_info ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 115\n      }\n    }) : '', value.provider_url ? \"URL: \" : '', value.provider_url ? __jsx(\"a\", {\n      href: value.provider_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 66\n      }\n    }, value.provider_url) : '', value.provider_url ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 149\n      }\n    }) : '', __jsx(Link, {\n      href: \"/covid-testing-sites/[site]\",\n      as: \"/covid-testing-sites/\".concat(value, \"-site\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Link\")));\n  }));\n};\n\n_c = TestingSites;\n\nfunction CovidTestingSitesPage() {\n  _s();\n\n  var _React$useContext = React.useContext(MapMarkersContext),\n      setMapMarkers = _React$useContext.setState;\n\n  var _useSwr = useSwr('/api/testing-sites', fetcher),\n      data = _useSwr.data,\n      error = _useSwr.error;\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(function () {\n    var formattedData = (data || []).map(function (site) {\n      return {\n        key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        output_key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        name: site.site_name,\n        site_info: {\n          name: site.site_name,\n          provider_url: site.provider_url,\n          additional_info: site.additional_info,\n          address: site.address,\n          phone: site.phone,\n          monday: site.monday,\n          tuesday: site.tuesday,\n          wednesday: site.wednesday,\n          thursday: site.thursday,\n          friday: site.friday,\n          saturday: site.saturday,\n          sunday: site.sunday,\n          screening_required: site.screening_required,\n          appointment_required: site.appointment_required,\n          antibody_testing: site.antibody_testing\n        },\n        coordinates: {\n          lat: site.coordinates.lat,\n          lng: site.coordinates.lng\n        }\n      };\n    }); //console.log(\"formattedData\",formattedData);\n\n    setMapMarkers(formattedData);\n    return function () {\n      setMapMarkers([]);\n    };\n  }, [data, setMapMarkers]);\n  return __jsx(\"div\", {\n    className: \"sidebar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, error && 'Error loading content', !data && !error && 'Loading...', !error && data && __jsx(TestingSites, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 26\n    }\n  }));\n}\n\n_s(CovidTestingSitesPage, \"4XOVNxxC375nAunT48kTk7Pt1E0=\", false, function () {\n  return [useSwr];\n});\n\n_c2 = CovidTestingSitesPage;\nCovidTestingSitesPage.getLayout = getLayout;\nexport default CovidTestingSitesPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TestingSites\");\n$RefreshReg$(_c2, \"CovidTestingSitesPage\");","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx"],"names":["React","useEffect","useSwr","useRouter","Link","MapMarkersContext","getLayout","fetcher","fetch","then","res","json","TestingSites","data","filter","item","site_name","map","value","idx","address","phone","appointment_required","antibody_testing","sunday","monday","tuesday","wednesday","thursday","friday","saturday","additional_info","provider_url","CovidTestingSitesPage","useContext","setMapMarkers","setState","error","console","formattedData","site","key","coordinates","lat","lng","output_key","name","site_info","screening_required"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport useSwr from 'swr';\r\n\r\nimport { useRouter } from 'next/router'\r\nimport Link from 'next/link'\r\n\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\n\r\n//add another context that allows tracking what is in the info panel. It could possibly be a specific page in the pages folder\r\n//url for each specific info box. so once you click on a specific info box it could take you to a page where the data is loaded. so you could copy url and send somebody a testing site\r\n//more specific for each route: covid-testing-sites/\"identifier\" â€“ Dynamic Routing using [] around the name of the file [site].jsx directly mapped to request.params. Max to send me next.js docs\r\n//still make a context, but handle more from the page so it will be easier \r\n//we would link to the page so you wouldn't have a click handler, but the page itself will have a specific one it's looking at request?params=\"identifier\"\r\n\r\nimport { getLayout } from 'components/MapLayout';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\r\n\r\n//this is the data for the side of the map. however, it should only show up on click.\r\n//will have to figure out how to do context to pass onClick so that it will show up\r\nconst TestingSites = ({ data }) => (  \r\n  <div>\r\n    {\r\n      data.filter(item=>item.site_name===\"AdvantageCare Kings Highway\")//filtering the data here. but we want it to filter to just the item that's clicked.\r\n        .map((value, idx) => <p key={idx}>\r\n                \r\n        Address: {value.address} <br></br> \r\n        {value.phone ? `Phone Number: ${value.phone}` : ''}{value.phone ? <br></br> : ''}\r\n        You are {value.appointment_required ? 'required' : 'not required'} to have an appointment to get tested.<br></br>\r\n        This testing site {value.antibody_testing ? 'provides' : 'does not provide'} antibody testing. <br></br>        \r\n        Hours: <br></br>\r\n        {value.sunday ? `Sunday: ${value.sunday}` : ''}{value.sunday ? <br></br> : ''}\r\n        {value.monday ? `Monday: ${value.monday}` : ''}{value.monday ? <br></br> : ''}\r\n        {value.tuesday ? `Tuesday: ${value.tuesday}` : ''}{value.tuesday ? <br></br> : ''}\r\n        {value.wednesday ? `Wednesday: ${value.wednesday}` : ''}{value.wednesday ? <br></br> : ''}\r\n        {value.thursday ? `Thursday: ${value.thursday}` : ''}{value.thursday ? <br></br> : ''}\r\n        {value.friday ? `Friday: ${value.friday}` : ''}{value.friday ? <br></br> : ''}\r\n        {value.saturday ? `Saturday: ${value.saturday}` : ''}{value.saturday ? <br></br> : ''}\r\n        {value.additional_info ? `Additional Information: ${value.additional_info}` : ''}{value.additional_info ? <br></br> : ''}         \r\n        {value.provider_url ? `URL: ` : ''}{value.provider_url ? <a href = {value.provider_url}>{value.provider_url}</a> : ''}{value.provider_url ? <br></br> : ''} \r\n        <Link href=\"/covid-testing-sites/[site]\" as={`/covid-testing-sites/${value}-site`}>\r\n            <a>Link</a>\r\n        </Link>\r\n      </p>)\r\n      \r\n    }\r\n  </div>\r\n);\r\n\r\nfunction CovidTestingSitesPage() {\r\n  const { setState: setMapMarkers } = React.useContext(MapMarkersContext);    \r\n  const { data, error } = useSwr('/api/testing-sites', fetcher);\r\n  if (error) {\r\n    console.error('Error loading data from API for /api/testing-sites: ', error);\r\n  }    \r\n\r\n  useEffect(() => {\r\n    const formattedData = (data || []).map((site) => ({\r\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      name: site.site_name,   \r\n      site_info: {\r\n        name: site.site_name, \r\n        provider_url: site.provider_url,\r\n        additional_info: site.additional_info,\r\n        address: site.address,\r\n        phone: site.phone,\r\n        monday: site.monday,\r\n        tuesday: site.tuesday,\r\n        wednesday: site.wednesday,\r\n        thursday: site.thursday,\r\n        friday: site.friday,\r\n        saturday: site.saturday,\r\n        sunday: site.sunday,\r\n        screening_required: site.screening_required,\r\n        appointment_required: site.appointment_required,\r\n        antibody_testing: site.antibody_testing, \r\n      },                   \r\n      coordinates: {\r\n        lat: site.coordinates.lat,\r\n        lng: site.coordinates.lng,\r\n      },\r\n    }));\r\n    //console.log(\"formattedData\",formattedData);\r\n    setMapMarkers(formattedData);\r\n\r\n    return () => {\r\n      setMapMarkers([]);\r\n    }\r\n  }, [data, setMapMarkers]);\r\n\r\n  return (\r\n    <div className=\"sidebar-content\">\r\n      {error && 'Error loading content'}\r\n      {!data && !error && 'Loading...'}\r\n      {/* {!error && data && \"data here\"} */}\r\n      {!error && data && <TestingSites data = {data}/>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nCovidTestingSitesPage.getLayout = getLayout;\r\n\r\nexport default CovidTestingSitesPage;\r\n"]},"metadata":{},"sourceType":"module"}