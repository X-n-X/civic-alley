{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/components/GoogleMap/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport useSwr from 'swr';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { MapMarker } from 'components/MapMarker';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport { ClickedItemContext } from 'components/ClickedItemContext';\nimport config from './mapConfig';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nfunction getMapOptions() {\n  return config;\n}\n\nexport function GoogleMap() {\n  const {\n    markers\n  } = useContext(MapMarkersContext);\n  const {\n    0: newAddress,\n    1: setNewAddress\n  } = useState(\"\");\n  const {\n    0: markerClick,\n    1: setMarkerClick\n  } = useState(\"\");\n  const {\n    0: currentPointClicked,\n    1: addCurrentPointClicked\n  } = useState([]);\n  const {\n    0: center,\n    1: setCenter\n  } = useState({\n    lat: 40.635,\n    lng: -73.94\n  });\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(13);\n  const {\n    clicked_item,\n    setState: setClickedItem\n  } = React.useContext(ClickedItemContext);\n  useEffect(() => {\n    // if(newAddress !== \"\"){\n    // fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyAJOTmiaxGzBHyK-MI9o3jRSwnHq0u-MvU&address=${newAddress}`,{\n    //       method: \"GET\",\n    //       dataType: \"JSON\",\n    //   })\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     setCenter({lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}); \n    //     setZoom(14);\n    //   });\n    // }\n    //else \n    if (markerClick !== \"\") {\n      console.log(\"called\", markerClick);\n      setCenter({\n        lat: markerClick.lat,\n        lng: markerClick.lng\n      });\n      setNewAddress(markerClick.site_info.address);\n      setZoom(14);\n      var clicked_items = currentPointClicked;\n      clicked_items.push(markerClick);\n      addCurrentPointClicked(clicked_items); //console.log(\"set clicked item\",clicked_item)\n      //setClickedItem(markerClick);\n\n      console.log(currentPointClicked);\n      setMarkerClick(\"\");\n    }\n  }); //   return () => {\n  //     setClickedItem(\"\");\n  //   }\n  // }, [clicked_item, setClickedItem]);\n\n  return __jsx(\"div\", {\n    className: \"google-map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    id: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }), __jsx(\"button\", {\n    onClick: () => setNewAddress(document.getElementById('address').value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, \"Change Center\"), __jsx(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: \"AIzaSyAJOTmiaxGzBHyK-MI9o3jRSwnHq0u-MvU\"\n    } //bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL }}\n    ,\n    center: center // defaultZoom={13}\n    ,\n    zoom: zoom,\n    options: getMapOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, markers.map(item => //  <div onClick = {()=>setMarkerClick({lat: item.coordinates.lat,lng: item.coordinates.lng})}>\n  __jsx(MapMarker, {\n    key: item.key //text={item.name}            \n    ,\n    lat: item.coordinates.lat,\n    lng: item.coordinates.lng,\n    output_key: item.output_key,\n    name: item.name // coordinates = {item.coordinates}      \n    ,\n    site_info: item.site_info,\n    function_to_run: () => setMarkerClick({\n      name: item.name,\n      site_info: item.site_info,\n      lat: item.coordinates.lat,\n      lng: item.coordinates.lng\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/components/GoogleMap/index.jsx"],"names":["React","useContext","useState","useEffect","GoogleMapReact","useSwr","useRouter","Link","MapMarker","MapMarkersContext","ClickedItemContext","config","fetcher","args","fetch","then","res","json","getMapOptions","GoogleMap","markers","newAddress","setNewAddress","markerClick","setMarkerClick","currentPointClicked","addCurrentPointClicked","center","setCenter","lat","lng","zoom","setZoom","clicked_item","setState","setClickedItem","console","log","site_info","address","clicked_items","push","document","getElementById","value","key","map","item","coordinates","output_key","name"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport useSwr from 'swr';\r\nimport { useRouter } from 'next/router'\r\nimport Link from 'next/link'\r\n\r\nimport { MapMarker } from 'components/MapMarker';\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\nimport { ClickedItemContext } from 'components/ClickedItemContext';\r\n\r\nimport config from './mapConfig';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\r\n\r\nfunction getMapOptions() {\r\n  return config;\r\n}\r\n\r\nexport function GoogleMap() {  \r\n  const { markers } = useContext(MapMarkersContext);    \r\n  const [newAddress, setNewAddress] = useState(\"\");\r\n  const [markerClick, setMarkerClick] = useState(\"\");\r\n  const [currentPointClicked, addCurrentPointClicked] = useState([]);\r\n  const [center, setCenter] = useState({lat: 40.635,lng: -73.94});\r\n  const [zoom, setZoom] = useState(13);\r\n  const { clicked_item ,setState: setClickedItem } = React.useContext(ClickedItemContext);\r\n\r\n  useEffect(() => {        \r\n    // if(newAddress !== \"\"){\r\n    // fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyAJOTmiaxGzBHyK-MI9o3jRSwnHq0u-MvU&address=${newAddress}`,{\r\n    //       method: \"GET\",\r\n    //       dataType: \"JSON\",\r\n    //   })\r\n    //   .then(response => response.json())\r\n    //   .then(data => {\r\n    //     setCenter({lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}); \r\n    //     setZoom(14);\r\n        \r\n    //   });\r\n    // }\r\n    //else \r\n    if(markerClick !== \"\"){\r\n      console.log(\"called\", markerClick)\r\n      setCenter({lat: Â markerClick.lat, lng: markerClick.lng}); \r\n      setNewAddress(markerClick.site_info.address);\r\n      setZoom(14);\r\n      var clicked_items = currentPointClicked;\r\n      clicked_items.push(markerClick);\r\n      addCurrentPointClicked(clicked_items);\r\n      //console.log(\"set clicked item\",clicked_item)\r\n      //setClickedItem(markerClick);\r\n      console.log(currentPointClicked);\r\n      setMarkerClick(\"\");\r\n    }  \r\n  });    \r\n    //   return () => {\r\n    //     setClickedItem(\"\");\r\n    //   }\r\n    // }, [clicked_item, setClickedItem]);\r\n\r\n  return (\r\n    <div className=\"google-map-container\">            \r\n      {<input id=\"address\"></input>}\r\n      {<button onClick={() => setNewAddress(document.getElementById('address').value)}>Change Center</button>}      \r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"AIzaSyAJOTmiaxGzBHyK-MI9o3jRSwnHq0u-MvU\" }}\r\n        //bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL }}\r\n        center={center}\r\n        // defaultZoom={13}\r\n        zoom={zoom}\r\n        options={getMapOptions}\r\n      >\r\n       {markers.map((item) => (\r\n        //  <div onClick = {()=>setMarkerClick({lat: item.coordinates.lat,lng: item.coordinates.lng})}>\r\n          <MapMarker\r\n            key={item.key}\r\n            //text={item.name}            \r\n            lat={ item.coordinates.lat}\r\n            lng={ item.coordinates.lng}\r\n            output_key = {item.output_key}            \r\n            name = {item.name}\r\n            // coordinates = {item.coordinates}      \r\n            site_info= {item.site_info}\r\n            function_to_run = {()=>setMarkerClick({name: item.name, site_info: item.site_info, lat: item.coordinates.lat,lng: item.coordinates.lng})}\r\n          />                    \r\n        ))}\r\n      </GoogleMapReact>      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}