{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/community-orgs/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport useSwr from 'swr';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport { getLayout } from 'components/MapLayout';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json()); //this is the data for the side of the map. however, it should only show up on click.\n//will have to figure out how to do context to pass onClick so that it will show up\n\n\nconst CommunityOrg = ({\n  data\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, //data.filter(item=>item.site_name===\"AdvantageCare Kings Highway\")//filtering the data here. but we want it to filter to just the item that's clicked.\ndata.map((value, idx) => __jsx(\"p\", {\n  key: idx,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 34\n  }\n}, value.sunday ? `Name: ${value.site_name}` : '', value.site_name ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 76\n  }\n}) : '', \"Address: \", value.address, \" \", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 34\n  }\n}), value.type ? `Type: ${value.type}` : '', value.type ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 64\n  }\n}) : '', value.purpose_neighborhood_associated_with ? `Purpose\tNeighborhood Associated With: ${value.purpose_neighborhood_associated_with}` : '', value.purpose_neighborhood_associated_with ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 192\n  }\n}) : '', value.tuesday ? `Tuesday: ${value.tuesday}` : '', value.tuesday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 76\n  }\n}) : '', value.wednesday ? `Wednesday: ${value.wednesday}` : '', value.wednesday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 84\n  }\n}) : '')));\n\nfunction CommunityOrgsPage() {\n  const {\n    setState: setMapMarkers\n  } = React.useContext(MapMarkersContext);\n  const {\n    data,\n    error\n  } = useSwr('/api/testing-sites', fetcher);\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(() => {\n    const formattedData = (data || []).map(site => ({\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      name: site.name,\n      site_info: {\n        site_name: site.site_name,\n        type: site.Type,\n        purpose_neighborhood_associated_with: site[\"Purpose\tNeighborhood Associated With\"],\n        address: site.Location,\n        website_contact_info: site[\"Website Contact Info\"]\n      },\n      coordinates: {\n        lat: site.coordinates.lat,\n        lng: site.coordinates.lng\n      }\n    })); //console.log(\"formattedData\",formattedData);\n\n    setMapMarkers(formattedData);\n    return () => {\n      setMapMarkers([]);\n    };\n  }, [data, setMapMarkers]);\n  return __jsx(\"div\", {\n    className: \"sidebar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, error && 'Error loading content', !data && !error && 'Loading...', !error && data && __jsx(CommunityOrg, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }\n  }));\n}\n\nCommunityOrgsPage.getLayout = getLayout;\nexport default CommunityOrgsPage;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/community-orgs/index.jsx"],"names":["React","useEffect","useSwr","MapMarkersContext","getLayout","fetcher","args","fetch","then","res","json","CommunityOrg","data","map","value","idx","sunday","site_name","address","type","purpose_neighborhood_associated_with","tuesday","wednesday","CommunityOrgsPage","setState","setMapMarkers","useContext","error","console","formattedData","site","key","coordinates","lat","lng","output_key","name","site_info","Type","Location","website_contact_info"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport useSwr from 'swr';\n\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport { getLayout } from 'components/MapLayout';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\n//this is the data for the side of the map. however, it should only show up on click.\n//will have to figure out how to do context to pass onClick so that it will show up\nconst CommunityOrg = ({ data }) => (  \n  <div>\n    {\n      //data.filter(item=>item.site_name===\"AdvantageCare Kings Highway\")//filtering the data here. but we want it to filter to just the item that's clicked.\n        data.map((value, idx) => <p key={idx}>\n\n        {value.sunday ? `Name: ${value.site_name}` : ''}{value.site_name ? <br></br> : ''}        \n        Address: {value.address} <br></br> \n        {value.type ? `Type: ${value.type}` : ''}{value.type ? <br></br> : ''}\n        {value.purpose_neighborhood_associated_with ? `Purpose\tNeighborhood Associated With: ${value.purpose_neighborhood_associated_with}` : ''}{value.purpose_neighborhood_associated_with ? <br></br> : ''}\n        {value.tuesday ? `Tuesday: ${value.tuesday}` : ''}{value.tuesday ? <br></br> : ''}\n        {value.wednesday ? `Wednesday: ${value.wednesday}` : ''}{value.wednesday ? <br></br> : ''}</p>\n        \n        )\n      \n    }\n  </div>\n);\n\nfunction CommunityOrgsPage() {\n  const { setState: setMapMarkers } = React.useContext(MapMarkersContext);    \n  const { data, error } = useSwr('/api/testing-sites', fetcher);\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }    \n\n  useEffect(() => {\n    const formattedData = (data || []).map((site) => ({\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      name: site.name,   \n      site_info: {\n        site_name: site.site_name,\n        type: site.Type,\n        purpose_neighborhood_associated_with: site[\"Purpose\tNeighborhood Associated With\"],\n        address: site.Location,\n        website_contact_info: site[\"Website Contact Info\"]\n      },                   \n      coordinates: {\n        lat: site.coordinates.lat,\n        lng: site.coordinates.lng,\n      },\n    }));\n    //console.log(\"formattedData\",formattedData);\n    setMapMarkers(formattedData);\n\n    return () => {\n      setMapMarkers([]);\n    }\n  }, [data, setMapMarkers]);\n\n  return (\n    <div className=\"sidebar-content\">\n      {error && 'Error loading content'}\n      {!data && !error && 'Loading...'}\n      {/* {!error && data && \"data here\"} */}\n      {!error && data && <CommunityOrg data = {data}/>}\n    </div>\n  );\n\n}\n\nCommunityOrgsPage.getLayout = getLayout;\n\nexport default CommunityOrgsPage;\n"]},"metadata":{},"sourceType":"module"}