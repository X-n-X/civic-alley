{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/components/GoogleMap/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport useSwr from 'swr';\nimport { MapMarker } from 'components/MapMarker';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport config from './mapConfig';\n\nfunction getMapOptions() {\n  return config;\n} // function getCenter(x) {\n//   if(x === undefined){\n//     var address = \"554 76th street bay ridge\";\n//     const { coordinates, error } = useSwr(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${address}`, fetcher);\n//     if (error) {\n//       console.error('Error loading the Google Maps lng lat ', error);\n//     }\n//     return {lat: coordinates.results[0].geometry.location.lat, lng: coordinates.results[0].geometry.location.lng};    \n//   }else\n//     return {lat: 40.635,lng: -73.94};\n// }\n// function changeCenter() {  \n//   var coordinates = {lat: 40.742,lng: -73.769};\n//   return coordinates;  \n// }\n// var address = \"\";\n// function setCoordinates(address){    \n// if(address !== \"\"){             \n//     //fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\n//     fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`,{\n//         method: \"GET\",\n//         dataType: \"JSON\",\n//         // headers: {\n//         //   \"Content-Type\": \"application/json; charset=utf-8\",\n//         // }\n//     })\n//     .then(response => response.json())\n//     .then(data => {           \n//       this.setState({ coordinates: {lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}});          \n//     });\n// }\n// }\n\n\nfunction changeCenter(address) {\n  console.log(\"address\", address);\n\n  if (address !== \"\") {\n    //fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\n    fetch(\"https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=\".concat(address), {\n      method: \"GET\",\n      dataType: \"JSON\" // headers: {\n      //   \"Content-Type\": \"application/json; charset=utf-8\",\n      // }\n\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return {\n        lat: data.results[0].geometry.location.lat,\n        lng: data.results[0].geometry.location.lng\n      };\n    });\n  }\n}\n\nexport function GoogleMap() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(MapMarkersContext),\n      markers = _useContext.markers;\n\n  var _useState = useState(\"\"),\n      newAddress = _useState[0],\n      setNewAddress = _useState[1];\n\n  var _useState2 = useState({\n    lat: 40.635,\n    lng: -73.94\n  }),\n      center = _useState2[0],\n      setCenter = _useState2[1];\n\n  useEffect(function () {\n    if (newAddress !== \"\") {\n      fetch(\"https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=\".concat(newAddress), {\n        method: \"GET\",\n        dataType: \"JSON\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setCenter({\n          lat: data.results[0].geometry.location.lat,\n          lng: data.results[0].geometry.location.lng\n        });\n      });\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"google-map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    id: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setNewAddress(document.getElementById('address').value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }, \"Change Center\"), __jsx(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: \"AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo\"\n    } //bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL }}\n    ,\n    center: center,\n    defaultZoom: 13,\n    options: getMapOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, markers.map(function (item) {\n    return __jsx(MapMarker, {\n      key: item.key //text={item.name}            \n      ,\n      lat: item.coordinates.lat,\n      lng: item.coordinates.lng,\n      output_key: item.output_key,\n      name: item.name // coordinates = {item.coordinates}      \n      ,\n      site_info: item.site_info,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\n_s(GoogleMap, \"zMpKjgm1NEsHrWQNRF6SgO5iBak=\");\n\n_c = GoogleMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/components/GoogleMap/index.jsx"],"names":["React","useContext","useState","useEffect","GoogleMapReact","useSwr","MapMarker","MapMarkersContext","config","getMapOptions","changeCenter","address","console","log","fetch","method","dataType","then","response","json","data","lat","results","geometry","location","lng","GoogleMap","markers","newAddress","setNewAddress","center","setCenter","document","getElementById","value","key","map","item","coordinates","output_key","name","site_info"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport useSwr from 'swr';\r\n\r\nimport { MapMarker } from 'components/MapMarker';\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\n\r\nimport config from './mapConfig';\r\n\r\nfunction getMapOptions() {\r\n  return config;\r\n}\r\n\r\n\r\n// function getCenter(x) {\r\n//   if(x === undefined){\r\n//     var address = \"554 76th street bay ridge\";\r\n//     const { coordinates, error } = useSwr(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${address}`, fetcher);\r\n//     if (error) {\r\n//       console.error('Error loading the Google Maps lng lat ', error);\r\n//     }\r\n//     return {lat: coordinates.results[0].geometry.location.lat, lng: coordinates.results[0].geometry.location.lng};    \r\n//   }else\r\n//     return {lat: 40.635,lng: -73.94};\r\n// }\r\n\r\n// function changeCenter() {  \r\n//   var coordinates = {lat: 40.742,lng: -73.769};\r\n//   return coordinates;  \r\n// }\r\n\r\n// var address = \"\";\r\n\r\n// function setCoordinates(address){    \r\n  // if(address !== \"\"){             \r\n  //     //fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\r\n  //     fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`,{\r\n  //         method: \"GET\",\r\n  //         dataType: \"JSON\",\r\n  //         // headers: {\r\n  //         //   \"Content-Type\": \"application/json; charset=utf-8\",\r\n  //         // }\r\n  //     })\r\n  //     .then(response => response.json())\r\n  //     .then(data => {           \r\n  //       this.setState({ coordinates: {lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}});          \r\n  //     });\r\n  // }\r\n// }\r\n\r\nfunction changeCenter(address){\r\n  console.log(\"address\",address)\r\n  if(address !== \"\"){             \r\n      //fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\r\n      fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${address}`,{\r\n          method: \"GET\",\r\n          dataType: \"JSON\",\r\n          // headers: {\r\n          //   \"Content-Type\": \"application/json; charset=utf-8\",\r\n          // }\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {           \r\n        return {lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}; \r\n      });\r\n  }\r\n}\r\n\r\nexport function GoogleMap() {  \r\n  const { markers } = useContext(MapMarkersContext);    \r\n  const [newAddress, setNewAddress] = useState(\"\");\r\n  const [center, setCenter] = useState({lat: 40.635,lng: -73.94});\r\n\r\n  useEffect(() => {        \r\n\r\n    if(newAddress !== \"\"){\r\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${newAddress}`,{\r\n          method: \"GET\",\r\n          dataType: \"JSON\",\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {           \r\n        setCenter({lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}); \r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return (\r\n    <div className=\"google-map-container\">            \r\n      {<input id=\"address\"></input>}\r\n      {<button onClick={() => setNewAddress(document.getElementById('address').value)}>Change Center</button>}      \r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo\" }}\r\n        //bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL }}\r\n        center={center}\r\n        defaultZoom={13}\r\n        options={getMapOptions}\r\n      >\r\n       {markers.map((item) => (\r\n          <MapMarker\r\n            key={item.key}\r\n            //text={item.name}            \r\n            lat={ item.coordinates.lat}\r\n            lng={ item.coordinates.lng}\r\n            output_key = {item.output_key}            \r\n            name = {item.name}\r\n            // coordinates = {item.coordinates}      \r\n            site_info= {item.site_info}             \r\n          />\r\n        ))}\r\n      </GoogleMapReact>      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}