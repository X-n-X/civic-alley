{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/community-orgs/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport useSwr from 'swr';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport { getLayout } from 'components/MapLayout';\n\nvar fetcher = function fetcher() {\n  return fetch.apply(void 0, arguments).then(function (res) {\n    return res.json();\n  });\n}; //this is the data for the side of the map. however, it should only show up on click.\n//will have to figure out how to do context to pass onClick so that it will show up\n\n\nvar CommunityOrg = function CommunityOrg(_ref) {\n  var data = _ref.data;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, //data.filter(item=>item.site_name===\"AdvantageCare Kings Highway\")//filtering the data here. but we want it to filter to just the item that's clicked.\n  data.map(function (value, idx) {\n    return __jsx(\"p\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 34\n      }\n    }, value.sunday ? \"Name: \".concat(value.site_name) : '', value.site_name ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 76\n      }\n    }) : '', \"Address: \", value.address, \" \", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 34\n      }\n    }), value.type ? \"Type: \".concat(value.type) : '', value.type ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 64\n      }\n    }) : '', value.purpose_neighborhood_associated_with ? \"Purpose\\tNeighborhood Associated With: \".concat(value.purpose_neighborhood_associated_with) : '', value.purpose_neighborhood_associated_with ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 192\n      }\n    }) : '', value.tuesday ? \"Tuesday: \".concat(value.tuesday) : '', value.tuesday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 76\n      }\n    }) : '', value.wednesday ? \"Wednesday: \".concat(value.wednesday) : '', value.wednesday ? __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 84\n      }\n    }) : '');\n  }));\n};\n\n_c = CommunityOrg;\n\nfunction CommunityOrgsPage() {\n  _s();\n\n  var _React$useContext = React.useContext(MapMarkersContext),\n      setMapMarkers = _React$useContext.setState;\n\n  var _useSwr = useSwr('/api/testing-sites', fetcher),\n      data = _useSwr.data,\n      error = _useSwr.error;\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(function () {\n    var formattedData = (data || []).map(function (site) {\n      return {\n        key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        output_key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        name: site.name,\n        site_info: {\n          site_name: site.site_name,\n          type: site.Type,\n          purpose_neighborhood_associated_with: site[\"Purpose\tNeighborhood Associated With\"],\n          address: site.Location,\n          website_contact_info: site[\"Website Contact Info\"]\n        },\n        coordinates: {\n          lat: site.coordinates.lat,\n          lng: site.coordinates.lng\n        }\n      };\n    }); //console.log(\"formattedData\",formattedData);\n\n    setMapMarkers(formattedData);\n    return function () {\n      setMapMarkers([]);\n    };\n  }, [data, setMapMarkers]);\n  return __jsx(\"div\", {\n    className: \"sidebar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, error && 'Error loading content', !data && !error && 'Loading...', !error && data && __jsx(CommunityOrg, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }\n  }));\n}\n\n_s(CommunityOrgsPage, \"4XOVNxxC375nAunT48kTk7Pt1E0=\", false, function () {\n  return [useSwr];\n});\n\n_c2 = CommunityOrgsPage;\nCommunityOrgsPage.getLayout = getLayout;\nexport default CommunityOrgsPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommunityOrg\");\n$RefreshReg$(_c2, \"CommunityOrgsPage\");","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/community-orgs/index.jsx"],"names":["React","useEffect","useSwr","MapMarkersContext","getLayout","fetcher","fetch","then","res","json","CommunityOrg","data","map","value","idx","sunday","site_name","address","type","purpose_neighborhood_associated_with","tuesday","wednesday","CommunityOrgsPage","useContext","setMapMarkers","setState","error","console","formattedData","site","key","coordinates","lat","lng","output_key","name","site_info","Type","Location","website_contact_info"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport useSwr from 'swr';\n\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport { getLayout } from 'components/MapLayout';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\n//this is the data for the side of the map. however, it should only show up on click.\n//will have to figure out how to do context to pass onClick so that it will show up\nconst CommunityOrg = ({ data }) => (  \n  <div>\n    {\n      //data.filter(item=>item.site_name===\"AdvantageCare Kings Highway\")//filtering the data here. but we want it to filter to just the item that's clicked.\n        data.map((value, idx) => <p key={idx}>\n\n        {value.sunday ? `Name: ${value.site_name}` : ''}{value.site_name ? <br></br> : ''}        \n        Address: {value.address} <br></br> \n        {value.type ? `Type: ${value.type}` : ''}{value.type ? <br></br> : ''}\n        {value.purpose_neighborhood_associated_with ? `Purpose\tNeighborhood Associated With: ${value.purpose_neighborhood_associated_with}` : ''}{value.purpose_neighborhood_associated_with ? <br></br> : ''}\n        {value.tuesday ? `Tuesday: ${value.tuesday}` : ''}{value.tuesday ? <br></br> : ''}\n        {value.wednesday ? `Wednesday: ${value.wednesday}` : ''}{value.wednesday ? <br></br> : ''}</p>\n        \n        )\n      \n    }\n  </div>\n);\n\nfunction CommunityOrgsPage() {\n  const { setState: setMapMarkers } = React.useContext(MapMarkersContext);    \n  const { data, error } = useSwr('/api/testing-sites', fetcher);\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }    \n\n  useEffect(() => {\n    const formattedData = (data || []).map((site) => ({\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      name: site.name,   \n      site_info: {\n        site_name: site.site_name,\n        type: site.Type,\n        purpose_neighborhood_associated_with: site[\"Purpose\tNeighborhood Associated With\"],\n        address: site.Location,\n        website_contact_info: site[\"Website Contact Info\"]\n      },                   \n      coordinates: {\n        lat: site.coordinates.lat,\n        lng: site.coordinates.lng,\n      },\n    }));\n    //console.log(\"formattedData\",formattedData);\n    setMapMarkers(formattedData);\n\n    return () => {\n      setMapMarkers([]);\n    }\n  }, [data, setMapMarkers]);\n\n  return (\n    <div className=\"sidebar-content\">\n      {error && 'Error loading content'}\n      {!data && !error && 'Loading...'}\n      {/* {!error && data && \"data here\"} */}\n      {!error && data && <CommunityOrg data = {data}/>}\n    </div>\n  );\n\n}\n\nCommunityOrgsPage.getLayout = getLayout;\n\nexport default CommunityOrgsPage;\n"]},"metadata":{},"sourceType":"module"}