{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/[testing-site].jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport useSwr from 'swr';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    pid,\n    name\n  } = router.query;\n  const {\n    data,\n    error\n  } = useSwr('/api/testing-sites', fetcher);\n  const {\n    0: testing_site,\n    1: setTestingSite\n  } = useState(\"\");\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(() => {\n    const formattedData = (data || []).map(site => ({\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      name: site.site_name,\n      site_info: {\n        name: site.site_name,\n        provider_url: site.provider_url,\n        additional_info: site.additional_info,\n        address: site.address,\n        phone: site.phone,\n        monday: site.monday,\n        tuesday: site.tuesday,\n        wednesday: site.wednesday,\n        thursday: site.thursday,\n        friday: site.friday,\n        saturday: site.saturday,\n        sunday: site.sunday,\n        screening_required: site.screening_required,\n        appointment_required: site.appointment_required,\n        antibody_testing: site.antibody_testing\n      },\n      coordinates: {\n        lat: site.coordinates.lat,\n        lng: site.coordinates.lng\n      }\n    })); //console.log(\"formattedData\",formattedData);\n\n    setTestingSite(data.filter(item => item.site_name === name));\n  });\n  console.log(\"data\", testing_site);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }, data.filter(item => item.site_name === name) //filtering the data here. but we want it to filter to just the item that's clicked.\n  .map((value, idx) => __jsx(\"p\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }\n  }, \"Address: \", value.address, \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 32\n    }\n  }), value.phone ? `Phone Number: ${value.phone}` : '', value.phone ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 73\n    }\n  }) : '', \"You are \", value.appointment_required ? 'required' : 'not required', \" to have an appointment to get tested.\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 111\n    }\n  }), \"This testing site \", value.antibody_testing ? 'provides' : 'does not provide', \" antibody testing. \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 102\n    }\n  }), \"Hours: \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }\n  }), value.sunday ? `Sunday: ${value.sunday}` : '', value.sunday ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 70\n    }\n  }) : '', value.monday ? `Monday: ${value.monday}` : '', value.monday ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 70\n    }\n  }) : '', value.tuesday ? `Tuesday: ${value.tuesday}` : '', value.tuesday ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 74\n    }\n  }) : '', value.wednesday ? `Wednesday: ${value.wednesday}` : '', value.wednesday ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 82\n    }\n  }) : '', value.thursday ? `Thursday: ${value.thursday}` : '', value.thursday ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 78\n    }\n  }) : '', value.friday ? `Friday: ${value.friday}` : '', value.friday ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 70\n    }\n  }) : '', value.saturday ? `Saturday: ${value.saturday}` : '', value.saturday ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 78\n    }\n  }) : '', value.additional_info ? `Additional Information: ${value.additional_info}` : '', value.additional_info ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 113\n    }\n  }) : '', value.provider_url ? `URL: ` : '', value.provider_url ? __jsx(\"a\", {\n    href: value.provider_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 64\n    }\n  }, value.provider_url) : '', value.provider_url ? __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 147\n    }\n  }) : '')));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/[testing-site].jsx"],"names":["React","useEffect","useState","useRouter","MapMarkersContext","useSwr","fetcher","args","fetch","then","res","json","Post","router","pid","name","query","data","error","testing_site","setTestingSite","console","formattedData","map","site","key","site_name","coordinates","lat","lng","output_key","site_info","provider_url","additional_info","address","phone","monday","tuesday","wednesday","thursday","friday","saturday","sunday","screening_required","appointment_required","antibody_testing","filter","item","log","value","idx"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3B,CAA7B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBF,MAAM,CAACG,KAA7B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBb,MAAM,CAAC,oBAAD,EAAuBC,OAAvB,CAA9B;AACA,QAAM;AAAA,OAACa,YAAD;AAAA,OAAeC;AAAf,MAAiClB,QAAQ,CAAC,EAAD,CAA/C;;AAEA,MAAIgB,KAAJ,EAAW;AACTG,IAAAA,OAAO,CAACH,KAAR,CAAc,sDAAd,EAAsEA,KAAtE;AACD;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,aAAa,GAAG,CAACL,IAAI,IAAI,EAAT,EAAaM,GAAb,CAAkBC,IAAD,KAAW;AAChDC,MAAAA,GAAG,EAAG,GAAED,IAAI,CAACE,SAAU,IAAGF,IAAI,CAACG,WAAL,CAAiBC,GAAI,IAAGJ,IAAI,CAACG,WAAL,CAAiBE,GAAI,EADvB;AAEhDC,MAAAA,UAAU,EAAG,GAAEN,IAAI,CAACE,SAAU,IAAGF,IAAI,CAACG,WAAL,CAAiBC,GAAI,IAAGJ,IAAI,CAACG,WAAL,CAAiBE,GAAI,EAF9B;AAGhDd,MAAAA,IAAI,EAAES,IAAI,CAACE,SAHqC;AAIhDK,MAAAA,SAAS,EAAE;AACThB,QAAAA,IAAI,EAAES,IAAI,CAACE,SADF;AAETM,QAAAA,YAAY,EAAER,IAAI,CAACQ,YAFV;AAGTC,QAAAA,eAAe,EAAET,IAAI,CAACS,eAHb;AAITC,QAAAA,OAAO,EAAEV,IAAI,CAACU,OAJL;AAKTC,QAAAA,KAAK,EAAEX,IAAI,CAACW,KALH;AAMTC,QAAAA,MAAM,EAAEZ,IAAI,CAACY,MANJ;AAOTC,QAAAA,OAAO,EAAEb,IAAI,CAACa,OAPL;AAQTC,QAAAA,SAAS,EAAEd,IAAI,CAACc,SARP;AASTC,QAAAA,QAAQ,EAAEf,IAAI,CAACe,QATN;AAUTC,QAAAA,MAAM,EAAEhB,IAAI,CAACgB,MAVJ;AAWTC,QAAAA,QAAQ,EAAEjB,IAAI,CAACiB,QAXN;AAYTC,QAAAA,MAAM,EAAElB,IAAI,CAACkB,MAZJ;AAaTC,QAAAA,kBAAkB,EAAEnB,IAAI,CAACmB,kBAbhB;AAcTC,QAAAA,oBAAoB,EAAEpB,IAAI,CAACoB,oBAdlB;AAeTC,QAAAA,gBAAgB,EAAErB,IAAI,CAACqB;AAfd,OAJqC;AAqBhDlB,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAEJ,IAAI,CAACG,WAAL,CAAiBC,GADX;AAEXC,QAAAA,GAAG,EAAEL,IAAI,CAACG,WAAL,CAAiBE;AAFX;AArBmC,KAAX,CAAjB,CAAtB,CADc,CA2BhB;;AACAT,IAAAA,cAAc,CAACH,IAAI,CAAC6B,MAAL,CAAYC,IAAI,IAAEA,IAAI,CAACrB,SAAL,KAAiBX,IAAnC,CAAD,CAAd;AACC,GA7BQ,CAAT;AA8BAM,EAAAA,OAAO,CAAC2B,GAAR,CAAY,MAAZ,EAAmB7B,YAAnB;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAELF,IAAI,CAAC6B,MAAL,CAAYC,IAAI,IAAEA,IAAI,CAACrB,SAAL,KAAiBX,IAAnC,EAAwC;AAAxC,GACGQ,GADH,CACO,CAAC0B,KAAD,EAAQC,GAAR,KAAgB;AAAG,IAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEXD,KAAK,CAACf,OAFK,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGpBe,KAAK,CAACd,KAAN,GAAe,iBAAgBc,KAAK,CAACd,KAAM,EAA3C,GAA+C,EAH3B,EAG+Bc,KAAK,CAACd,KAAN,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAA0B,EAHzD,cAIZc,KAAK,CAACL,oBAAN,GAA6B,UAA7B,GAA0C,cAJ9B,4CAImF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJnF,wBAKFK,KAAK,CAACJ,gBAAN,GAAyB,UAAzB,GAAsC,kBALpC,yBAK0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL1E,aAMd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANc,EAOpBI,KAAK,CAACP,MAAN,GAAgB,WAAUO,KAAK,CAACP,MAAO,EAAvC,GAA2C,EAPvB,EAO2BO,KAAK,CAACP,MAAN,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAA2B,EAPtD,EAQpBO,KAAK,CAACb,MAAN,GAAgB,WAAUa,KAAK,CAACb,MAAO,EAAvC,GAA2C,EARvB,EAQ2Ba,KAAK,CAACb,MAAN,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAA2B,EARtD,EASpBa,KAAK,CAACZ,OAAN,GAAiB,YAAWY,KAAK,CAACZ,OAAQ,EAA1C,GAA8C,EAT1B,EAS8BY,KAAK,CAACZ,OAAN,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,GAA4B,EAT1D,EAUpBY,KAAK,CAACX,SAAN,GAAmB,cAAaW,KAAK,CAACX,SAAU,EAAhD,GAAoD,EAVhC,EAUoCW,KAAK,CAACX,SAAN,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAA8B,EAVlE,EAWpBW,KAAK,CAACV,QAAN,GAAkB,aAAYU,KAAK,CAACV,QAAS,EAA7C,GAAiD,EAX7B,EAWiCU,KAAK,CAACV,QAAN,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GAA6B,EAX9D,EAYpBU,KAAK,CAACT,MAAN,GAAgB,WAAUS,KAAK,CAACT,MAAO,EAAvC,GAA2C,EAZvB,EAY2BS,KAAK,CAACT,MAAN,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAA2B,EAZtD,EAapBS,KAAK,CAACR,QAAN,GAAkB,aAAYQ,KAAK,CAACR,QAAS,EAA7C,GAAiD,EAb7B,EAaiCQ,KAAK,CAACR,QAAN,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GAA6B,EAb9D,EAcpBQ,KAAK,CAAChB,eAAN,GAAyB,2BAA0BgB,KAAK,CAAChB,eAAgB,EAAzE,GAA6E,EAdzD,EAc6DgB,KAAK,CAAChB,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,GAAoC,EAdjG,EAepBgB,KAAK,CAACjB,YAAN,GAAsB,OAAtB,GAA+B,EAfX,EAeeiB,KAAK,CAACjB,YAAN,GAAqB;AAAG,IAAA,IAAI,EAAIiB,KAAK,CAACjB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCiB,KAAK,CAACjB,YAAtC,CAArB,GAA+E,EAf9F,EAekGiB,KAAK,CAACjB,YAAN,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,GAAiC,EAfnI,CADvB,CAFK,CAAP;AAuBD,CAjED;;AAmEA,eAAepB,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router'\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport useSwr from 'swr';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nconst Post = () => {\n  const router = useRouter()\n  const { pid, name } = router.query\n  const { data, error } = useSwr('/api/testing-sites', fetcher);\n  const [testing_site, setTestingSite] = useState(\"\");  \n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }    \n\n  useEffect(() => {\n    const formattedData = (data || []).map((site) => ({\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      name: site.site_name,   \n      site_info: {\n        name: site.site_name, \n        provider_url: site.provider_url,\n        additional_info: site.additional_info,\n        address: site.address,\n        phone: site.phone,\n        monday: site.monday,\n        tuesday: site.tuesday,\n        wednesday: site.wednesday,\n        thursday: site.thursday,\n        friday: site.friday,\n        saturday: site.saturday,\n        sunday: site.sunday,\n        screening_required: site.screening_required,\n        appointment_required: site.appointment_required,\n        antibody_testing: site.antibody_testing, \n      },                   \n      coordinates: {\n        lat: site.coordinates.lat,\n        lng: site.coordinates.lng,\n      },\n    }));\n  //console.log(\"formattedData\",formattedData);\n  setTestingSite(data.filter(item=>item.site_name===name));\n  });\n  console.log(\"data\",testing_site)\n\n  return <div>\n  {\n    data.filter(item=>item.site_name===name)//filtering the data here. but we want it to filter to just the item that's clicked.\n      .map((value, idx) => <p key={idx}>\n              \n      Address: {value.address} <br></br> \n      {value.phone ? `Phone Number: ${value.phone}` : ''}{value.phone ? <br></br> : ''}\n      You are {value.appointment_required ? 'required' : 'not required'} to have an appointment to get tested.<br></br>\n      This testing site {value.antibody_testing ? 'provides' : 'does not provide'} antibody testing. <br></br>        \n      Hours: <br></br>\n      {value.sunday ? `Sunday: ${value.sunday}` : ''}{value.sunday ? <br></br> : ''}\n      {value.monday ? `Monday: ${value.monday}` : ''}{value.monday ? <br></br> : ''}\n      {value.tuesday ? `Tuesday: ${value.tuesday}` : ''}{value.tuesday ? <br></br> : ''}\n      {value.wednesday ? `Wednesday: ${value.wednesday}` : ''}{value.wednesday ? <br></br> : ''}\n      {value.thursday ? `Thursday: ${value.thursday}` : ''}{value.thursday ? <br></br> : ''}\n      {value.friday ? `Friday: ${value.friday}` : ''}{value.friday ? <br></br> : ''}\n      {value.saturday ? `Saturday: ${value.saturday}` : ''}{value.saturday ? <br></br> : ''}\n      {value.additional_info ? `Additional Information: ${value.additional_info}` : ''}{value.additional_info ? <br></br> : ''}         \n      {value.provider_url ? `URL: ` : ''}{value.provider_url ? <a href = {value.provider_url}>{value.provider_url}</a> : ''}{value.provider_url ? <br></br> : ''}       \n    </p>)\n    \n  }\n</div>\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}