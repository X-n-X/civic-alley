{"ast":null,"code":"var _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport useSwr from 'swr';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport { getLayout } from 'components/MapLayout';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json()); //this is the data for the side of the map. however, it should only show up on click.\n//will have to figure out how to do context to pass onClick so that it will show up\n\n\nconst TestingSites = ({\n  data\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, data.filter(item => item.site_name === \"AdvantageCare Kings Highway\") //filtering the data here. but we want it to filter to just the item that's clicked.\n.map((value, idx) => __jsx(\"p\", {\n  key: idx,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 30\n  }\n}, \"Address: \", value.address, \" \", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 34\n  }\n}), value.phone ? `Phone Number: ${value.phone}` : '', value.phone ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 75\n  }\n}) : '', \"You are \", value.appointment_required ? 'required' : 'not required', \" to have an appointment to get tested.\", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 113\n  }\n}), \"This testing site \", value.antibody_testing ? 'provides' : 'does not provide', \" antibody testing. \", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 104\n  }\n}), \"Hours: \", __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 16\n  }\n}), value.sunday ? `Sunday: ${value.sunday}` : '', value.sunday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 72\n  }\n}) : '', value.monday ? `Monday: ${value.monday}` : '', value.monday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 72\n  }\n}) : '', value.tuesday ? `Tuesday: ${value.tuesday}` : '', value.tuesday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 76\n  }\n}) : '', value.wednesday ? `Wednesday: ${value.wednesday}` : '', value.wednesday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 84\n  }\n}) : '', value.thursday ? `Thursday: ${value.thursday}` : '', value.thursday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 80\n  }\n}) : '', value.friday ? `Friday: ${value.friday}` : '', value.friday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 72\n  }\n}) : '', value.saturday ? `Saturday: ${value.saturday}` : '', value.saturday ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 80\n  }\n}) : '', value.additional_info ? `Additional Information: ${value.additional_info}` : '', value.additional_info ? __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 115\n  }\n}) : '', value.provider_url ? `URL: ` : '', value.provider_url ? __jsx(\"a\", {\n  href: value.provider_url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 66\n  }\n}, value.provider_url) : '')));\n\nfunction CovidTestingSitesPage() {\n  const {\n    setState: setMapMarkers\n  } = React.useContext(MapMarkersContext);\n  const {\n    data,\n    error\n  } = useSwr('/api/testing-sites', fetcher);\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(() => {\n    const formattedData = (data || []).map(site => ({\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      name: site.site_name,\n      site_info: {\n        name: site.site_name,\n        provider_url: site.provider_url,\n        additional_info: site.additional_info,\n        address: site.address,\n        phone: site.phone,\n        monday: site.monday,\n        tuesday: site.tuesday,\n        wednesday: site.wednesday,\n        thursday: site.thursday,\n        friday: site.friday,\n        saturday: site.saturday,\n        sunday: site.sunday,\n        screening_required: site.screening_required,\n        appointment_required: site.appointment_required,\n        antibody_testing: site.antibody_testing\n      },\n      coordinates: {\n        lat: site.coordinates.lat,\n        lng: site.coordinates.lng\n      }\n    })); //console.log(\"formattedData\",formattedData);\n\n    setMapMarkers(formattedData);\n    return () => {\n      setMapMarkers([]);\n    };\n  }, [data, setMapMarkers]);\n  console.log(\"data\", data);\n  return __jsx(\"div\", {\n    className: \"sidebar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, error && 'Error loading content', !data && !error && 'Loading...', !error && data && \"data here\", !error && data && __jsx(TestingSites, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }\n  }));\n}\n\nCovidTestingSitesPage.getLayout = getLayout;\nexport default CovidTestingSitesPage;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/index.jsx"],"names":["React","useEffect","useSwr","MapMarkersContext","getLayout","fetcher","args","fetch","then","res","json","TestingSites","data","filter","item","site_name","map","value","idx","address","phone","appointment_required","antibody_testing","sunday","monday","tuesday","wednesday","thursday","friday","saturday","additional_info","provider_url","CovidTestingSitesPage","setState","setMapMarkers","useContext","error","console","formattedData","site","key","coordinates","lat","lng","output_key","name","site_info","screening_required","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport useSwr from 'swr';\r\n\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\nimport { getLayout } from 'components/MapLayout';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\r\n\r\n//this is the data for the side of the map. however, it should only show up on click.\r\n//will have to figure out how to do context to pass onClick so that it will show up\r\nconst TestingSites = ({ data }) => (  \r\n  <div>\r\n    {\r\n      data.filter(item=>item.site_name===\"AdvantageCare Kings Highway\")//filtering the data here. but we want it to filter to just the item that's clicked.\r\n        .map((value, idx) => <p key={idx}>\r\n                \r\n        Address: {value.address} <br></br> \r\n        {value.phone ? `Phone Number: ${value.phone}` : ''}{value.phone ? <br></br> : ''}\r\n        You are {value.appointment_required ? 'required' : 'not required'} to have an appointment to get tested.<br></br>\r\n        This testing site {value.antibody_testing ? 'provides' : 'does not provide'} antibody testing. <br></br>        \r\n        Hours: <br></br>\r\n        {value.sunday ? `Sunday: ${value.sunday}` : ''}{value.sunday ? <br></br> : ''}\r\n        {value.monday ? `Monday: ${value.monday}` : ''}{value.monday ? <br></br> : ''}\r\n        {value.tuesday ? `Tuesday: ${value.tuesday}` : ''}{value.tuesday ? <br></br> : ''}\r\n        {value.wednesday ? `Wednesday: ${value.wednesday}` : ''}{value.wednesday ? <br></br> : ''}\r\n        {value.thursday ? `Thursday: ${value.thursday}` : ''}{value.thursday ? <br></br> : ''}\r\n        {value.friday ? `Friday: ${value.friday}` : ''}{value.friday ? <br></br> : ''}\r\n        {value.saturday ? `Saturday: ${value.saturday}` : ''}{value.saturday ? <br></br> : ''}\r\n        {value.additional_info ? `Additional Information: ${value.additional_info}` : ''}{value.additional_info ? <br></br> : ''}         \r\n        {value.provider_url ? `URL: ` : ''}{value.provider_url ? <a href = {value.provider_url}>{value.provider_url}</a> : ''}</p>\r\n        \r\n        )\r\n      \r\n    }\r\n  </div>\r\n);\r\n\r\nfunction CovidTestingSitesPage() {\r\n  const { setState: setMapMarkers } = React.useContext(MapMarkersContext);    \r\n  const { data, error } = useSwr('/api/testing-sites', fetcher);\r\n  if (error) {\r\n    console.error('Error loading data from API for /api/testing-sites: ', error);\r\n  }    \r\n\r\n  useEffect(() => {\r\n    const formattedData = (data || []).map((site) => ({\r\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\r\n      name: site.site_name,   \r\n      site_info: {\r\n        name: site.site_name, \r\n        provider_url: site.provider_url,\r\n        additional_info: site.additional_info,\r\n        address: site.address,\r\n        phone: site.phone,\r\n        monday: site.monday,\r\n        tuesday: site.tuesday,\r\n        wednesday: site.wednesday,\r\n        thursday: site.thursday,\r\n        friday: site.friday,\r\n        saturday: site.saturday,\r\n        sunday: site.sunday,\r\n        screening_required: site.screening_required,\r\n        appointment_required: site.appointment_required,\r\n        antibody_testing: site.antibody_testing, \r\n      },                   \r\n      coordinates: {\r\n        lat: site.coordinates.lat,\r\n        lng: site.coordinates.lng,\r\n      },\r\n    }));\r\n    //console.log(\"formattedData\",formattedData);\r\n    setMapMarkers(formattedData);\r\n\r\n    return () => {\r\n      setMapMarkers([]);\r\n    }\r\n  }, [data, setMapMarkers]);\r\n\r\n  console.log(\"data\",data)\r\n\r\n  return (\r\n    <div className=\"sidebar-content\">\r\n      {error && 'Error loading content'}\r\n      {!data && !error && 'Loading...'}\r\n      {!error && data && \"data here\"}\r\n      {!error && data && <TestingSites data = {data}/>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nCovidTestingSitesPage.getLayout = getLayout;\r\n\r\nexport default CovidTestingSitesPage;\r\n"]},"metadata":{},"sourceType":"module"}