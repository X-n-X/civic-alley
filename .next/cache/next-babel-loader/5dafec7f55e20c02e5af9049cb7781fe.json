{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/components/GoogleMap/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport useSwr from 'swr';\nimport { MapMarker } from 'components/MapMarker';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport config from './mapConfig';\n\nvar fetcher = function fetcher() {\n  return fetch.apply(void 0, arguments).then(function (res) {\n    return res.json();\n  });\n};\n\nfunction getMapOptions() {\n  return config;\n}\n\nfunction getCenter(coordinates) {\n  if (coordinates == \"\") return {\n    lat: 40.635,\n    lng: -73.94\n  };else return {\n    lat: coordinates.results[0].geometry.location.lat,\n    lng: coordinates.results[0].geometry.location.lng\n  };\n} // var address = \"\";\n// function setCoordinates(address){    \n//   if(address !== \"\"){             \n//       //fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\n//       fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`,{\n//           method: \"GET\",\n//           dataType: \"JSON\",\n//           // headers: {\n//           //   \"Content-Type\": \"application/json; charset=utf-8\",\n//           // }\n//       })\n//       .then(response => response.json())\n//       .then(data => {           \n//         this.setState({ coordinates: {lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}});          \n//       });\n//   }\n// }\n\n\nexport function GoogleMap() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(MapMarkersContext),\n      markers = _useContext.markers;\n\n  var _React$useState = React.useState(\"554 76th street bay ridge\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      address = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _useSwr = useSwr(\"https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=\".concat(address), fetcher),\n      coordinates = _useSwr.coordinates,\n      error = _useSwr.error;\n\n  return __jsx(\"div\", {\n    className: \"google-map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: \"AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo\"\n    } //bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL }}\n    ,\n    defaultCenter: getCenter(coordinates),\n    defaultZoom: 13,\n    options: getMapOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, markers.map(function (item) {\n    return __jsx(MapMarker, {\n      key: item.key //text={item.name}            \n      ,\n      lat: item.coordinates.lat,\n      lng: item.coordinates.lng,\n      site_info: item.site_info,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\n_s(GoogleMap, \"ofJQpLbV5ecAP+n60bj80NfyFY4=\", false, function () {\n  return [useSwr];\n});\n\n_c = GoogleMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/components/GoogleMap/index.jsx"],"names":["React","useContext","useState","GoogleMapReact","useSwr","MapMarker","MapMarkersContext","config","fetcher","fetch","then","res","json","getMapOptions","getCenter","coordinates","lat","lng","results","geometry","location","GoogleMap","markers","address","setState","error","key","map","item","site_info"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAaC,KAAK,MAAL,oBAAeC,IAAf,CAAoB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAAvB,CAAb;AAAA,CAAhB;;AAIA,SAASC,aAAT,GAAyB;AACvB,SAAON,MAAP;AACD;;AAED,SAASO,SAAT,CAAmBC,WAAnB,EAAgC;AAC9B,MAAGA,WAAW,IAAI,EAAlB,EACE,OAAO;AAACC,IAAAA,GAAG,EAAE,MAAN;AAAaC,IAAAA,GAAG,EAAE,CAAC;AAAnB,GAAP,CADF,KAGE,OAAO;AAACD,IAAAA,GAAG,EAAED,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCC,QAAhC,CAAyCJ,GAA/C;AAAoDC,IAAAA,GAAG,EAAEF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCC,QAAhC,CAAyCH;AAAlG,GAAP;AACH,C,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,SAASI,SAAT,GAAqB;AAAA;;AAAA;;AAAA,oBACNpB,UAAU,CAACK,iBAAD,CADJ;AAAA,MAClBgB,OADkB,eAClBA,OADkB;;AAAA,wBAEEtB,KAAK,CAACE,QAAN,CAAe,2BAAf,CAFF;AAAA;AAAA,MAEnBqB,OAFmB;AAAA,MAEVC,QAFU;;AAAA,gBAGKpB,MAAM,iHAA0GmB,OAA1G,GAAqHf,OAArH,CAHX;AAAA,MAGlBO,WAHkB,WAGlBA,WAHkB;AAAA,MAGLU,KAHK,WAGLA,KAHK;;AAM1B,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,cAAD;AACE,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KADpB,CAEE;AAFF;AAGE,IAAA,aAAa,EAAEZ,SAAS,CAACC,WAAD,CAH1B;AAIE,IAAA,WAAW,EAAE,EAJf;AAKE,IAAA,OAAO,EAAEF,aALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOES,OAAO,CAACK,GAAR,CAAY,UAACC,IAAD;AAAA,WACV,MAAC,SAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACF,GADZ,CAEE;AAFF;AAGE,MAAA,GAAG,EAAGE,IAAI,CAACb,WAAL,CAAiBC,GAHzB;AAIE,MAAA,GAAG,EAAGY,IAAI,CAACb,WAAL,CAAiBE,GAJzB;AAKE,MAAA,SAAS,EAAGW,IAAI,CAACC,SALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAZ,CAPF,CALF,CADF;AAyBD;;GA/BeR,S;UAGiBjB,M;;;KAHjBiB,S","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport useSwr from 'swr';\r\n\r\nimport { MapMarker } from 'components/MapMarker';\r\nimport { MapMarkersContext } from 'components/MapMarkersContext';\r\n\r\nimport config from './mapConfig';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(res => res.json())\r\n\r\n\r\n\r\nfunction getMapOptions() {\r\n  return config;\r\n}\r\n\r\nfunction getCenter(coordinates) {\r\n  if(coordinates == \"\")\r\n    return {lat: 40.635,lng: -73.94};\r\n  else\r\n    return {lat: coordinates.results[0].geometry.location.lat, lng: coordinates.results[0].geometry.location.lng};\r\n}\r\n\r\n// var address = \"\";\r\n\r\n// function setCoordinates(address){    \r\n//   if(address !== \"\"){             \r\n//       //fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL}&address=${this.state.address}`,{\r\n//       fetch(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${this.state.address}`,{\r\n//           method: \"GET\",\r\n//           dataType: \"JSON\",\r\n//           // headers: {\r\n//           //   \"Content-Type\": \"application/json; charset=utf-8\",\r\n//           // }\r\n//       })\r\n//       .then(response => response.json())\r\n//       .then(data => {           \r\n//         this.setState({ coordinates: {lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}});          \r\n//       });\r\n//   }\r\n// }\r\n\r\nexport function GoogleMap() {  \r\n  const { markers } = useContext(MapMarkersContext);\r\n  const [address, setState] = React.useState(\"554 76th street bay ridge\"); \r\n  const { coordinates, error } = useSwr(`https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo&address=${address}`, fetcher);\r\n  \r\n\r\n  return (\r\n    <div className=\"google-map-container\">\r\n      <br></br>\r\n      {/* <input value={this.state.address} onChange={this.setCoordinates}></input> */}\r\n      {/* <label for=\"address\">Enter address</label>\r\n      <input name =\"address\" onChange={setCoordinates(address)}></input> */}\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"AIzaSyBe7_ta_1zNod6CsCJI6ssWk64kyO14HZo\" }}\r\n        //bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAPS_BOOTSTRAP_URL }}\r\n        defaultCenter={getCenter(coordinates)}\r\n        defaultZoom={13}\r\n        options={getMapOptions}\r\n      >\r\n       {markers.map((item) => (\r\n          <MapMarker\r\n            key={item.key}\r\n            //text={item.name}            \r\n            lat={ item.coordinates.lat}\r\n            lng={ item.coordinates.lng}\r\n            site_info= {item.site_info}             \r\n          />\r\n        ))}\r\n      </GoogleMapReact>      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}