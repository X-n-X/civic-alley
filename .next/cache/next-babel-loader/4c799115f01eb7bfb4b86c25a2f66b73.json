{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/[testing-site].jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport useSwr from 'swr';\nimport Link from 'next/link';\n\nvar fetcher = function fetcher() {\n  return fetch.apply(void 0, arguments).then(function (res) {\n    return res.json();\n  });\n};\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var _router$query = router.query,\n      pid = _router$query.pid,\n      name = _router$query.name;\n\n  var _useSwr = useSwr('/api/testing-sites', fetcher),\n      data = _useSwr.data,\n      error = _useSwr.error;\n\n  var _useState = useState(\"\"),\n      testing_site = _useState[0],\n      setTestingSite = _useState[1];\n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }\n\n  useEffect(function () {\n    var formattedData = (data || []).map(function (site) {\n      return {\n        key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        output_key: \"\".concat(site.site_name, \"+\").concat(site.coordinates.lat, \"+\").concat(site.coordinates.lng),\n        name: site.site_name,\n        site_info: {\n          name: site.site_name,\n          provider_url: site.provider_url,\n          additional_info: site.additional_info,\n          address: site.address,\n          phone: site.phone,\n          monday: site.monday,\n          tuesday: site.tuesday,\n          wednesday: site.wednesday,\n          thursday: site.thursday,\n          friday: site.friday,\n          saturday: site.saturday,\n          sunday: site.sunday,\n          screening_required: site.screening_required,\n          appointment_required: site.appointment_required,\n          antibody_testing: site.antibody_testing\n        },\n        coordinates: {\n          lat: site.coordinates.lat,\n          lng: site.coordinates.lng\n        }\n      };\n    });\n    console.log(\"formattedData\", formattedData);\n    setTestingSite(formattedData.filter(function (item) {\n      return item.name === name;\n    }));\n  }, [data]);\n  console.log(\"data\", testing_site);\n  console.log(\"data map\", JSON.stringify(testing_site));\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"   yo\"));\n};\n\n_s(Post, \"6BI7+DlM4cnIAPBKhoV3q3VeEDM=\", false, function () {\n  return [useRouter, useSwr];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/benjamingordon/Documents/X&X/townie/pages/covid-testing-sites/[testing-site].jsx"],"names":["React","useEffect","useState","useRouter","MapMarkersContext","useSwr","Link","fetcher","fetch","then","res","json","Post","router","query","pid","name","data","error","testing_site","setTestingSite","console","formattedData","map","site","key","site_name","coordinates","lat","lng","output_key","site_info","provider_url","additional_info","address","phone","monday","tuesday","wednesday","thursday","friday","saturday","sunday","screening_required","appointment_required","antibody_testing","log","filter","item","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router'\nimport { MapMarkersContext } from 'components/MapMarkersContext';\nimport useSwr from 'swr';\nimport Link from 'next/link'\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nconst Post = () => {\n  const router = useRouter()\n  const { pid, name } = router.query\n  const { data, error } = useSwr('/api/testing-sites', fetcher);\n  const [testing_site, setTestingSite] = useState(\"\");  \n\n  if (error) {\n    console.error('Error loading data from API for /api/testing-sites: ', error);\n  }    \n\n  useEffect(() => {\n    const formattedData = (data || []).map((site) => ({\n      key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      output_key: `${site.site_name}+${site.coordinates.lat}+${site.coordinates.lng}`,\n      name: site.site_name,   \n      site_info: {\n        name: site.site_name, \n        provider_url: site.provider_url,\n        additional_info: site.additional_info,\n        address: site.address,\n        phone: site.phone,\n        monday: site.monday,\n        tuesday: site.tuesday,\n        wednesday: site.wednesday,\n        thursday: site.thursday,\n        friday: site.friday,\n        saturday: site.saturday,\n        sunday: site.sunday,\n        screening_required: site.screening_required,\n        appointment_required: site.appointment_required,\n        antibody_testing: site.antibody_testing, \n      },                   \n      coordinates: {\n        lat: site.coordinates.lat,\n        lng: site.coordinates.lng,\n      },\n    }));\n    console.log(\"formattedData\",formattedData);\n    setTestingSite(formattedData.filter(item=>item.name===name));\n  }, [data]);\n  console.log(\"data\",testing_site)\n  console.log(\"data map\",JSON.stringify(testing_site))\n\n  return <div>\n    {\n      <p>   yo             \n        {/* Address: {testing_site[0].site_info.address} <br></br> \n        {testing_site[0].site_info.phone ? `Phone Number: ${testing_site[0].site_info.phone}` : ''}{testing_site[0].site_info.phone ? <br></br> : ''}\n        You are {testing_site[0].site_info.appointment_required ? 'required' : 'not required'} to have an appointment to get tested.<br></br>\n        This testing site {testing_site[0].site_info.antibody_testing ? 'provides' : 'does not provide'} antibody testing. <br></br>        \n        Hours: <br></br>\n        {testing_site[0].site_info.sunday ? `Sunday: ${testing_site[0].site_info.sunday}` : ''}{testing_site[0].site_info.sunday ? <br></br> : ''}\n        {testing_site[0].site_info.monday ? `Monday: ${testing_site[0].site_info.monday}` : ''}{testing_site[0].site_info.monday ? <br></br> : ''}\n        {testing_site[0].site_info.tuesday ? `Tuesday: ${testing_site[0].site_info.tuesday}` : ''}{testing_site[0].site_info.tuesday ? <br></br> : ''}\n        {testing_site[0].site_info.wednesday ? `Wednesday: ${testing_site[0].site_info.wednesday}` : ''}{testing_site[0].site_info.wednesday ? <br></br> : ''}\n        {testing_site[0].site_info.thursday ? `Thursday: ${testing_site[0].site_info.thursday}` : ''}{testing_site[0].site_info.thursday ? <br></br> : ''}\n        {testing_site[0].site_info.friday ? `Friday: ${testing_site[0].site_info.friday}` : ''}{testing_site[0].site_info.friday ? <br></br> : ''}\n        {testing_site[0].site_info.saturday ? `Saturday: ${testing_site[0].site_info.saturday}` : ''}{testing_site[0].site_info.saturday ? <br></br> : ''}\n        {testing_site[0].site_info.additional_info ? `Additional Information: ${testing_site[0].site_info.additional_info}` : ''}{testing_site[0].site_info.additional_info ? <br></br> : ''}         \n        {testing_site[0].site_info.provider_url ? `URL: ` : ''}{testing_site[0].site_info.provider_url ? <a href = {testing_site[0].site_info.provider_url}>{testing_site[0].site_info.provider_url}</a> : ''}{testing_site[0].site_info.provider_url ? <br></br> : ''} \n        <Link href=\"/covid-testing-sites/[site]\" as={`/covid-testing-sites/${testing_site[0].site_info.site_name}?name=${testing_site[0].site_info.site_name}`}>\n            <a>Link to this Info</a>\n        </Link> */}\n      </p>\n      \n    }\n  </div>\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}